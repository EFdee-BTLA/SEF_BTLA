/*===========================================================================
	  C++ class	definitions	exported from UnrealScript.
	  This is automatically	generated by the tools.
	  DO NOT modify	this manually! Edit	the	corresponding .uc files	instead!
===========================================================================*/
#if SUPPORTS_PRAGMA_PACK
#pragma pack (push,4)
#endif

#ifndef SWATGAME_API
#define SWATGAME_API DLL_IMPORT
#endif

#ifndef NAMES_ONLY
#define AUTOGENERATE_NAME(name) extern SWATGAME_API	FName SWATGAME_##name;
#define AUTOGENERATE_FUNCTION(cls,idx,name)
#endif

AUTOGENERATE_NAME(ActivateViewport)
AUTOGENERATE_NAME(ActorIsInSameOrAdjacentZoneAsMe)
AUTOGENERATE_NAME(AddFocus)
AUTOGENERATE_NAME(AllVarsHaveReplicated)
AUTOGENERATE_NAME(ApplyOneFrameNudgeRotationOffset)
AUTOGENERATE_NAME(ApplyStungRotationOffset)
AUTOGENERATE_NAME(CanBeUsedByToolkitNow)
AUTOGENERATE_NAME(ColorizeExpectedCommand)
AUTOGENERATE_NAME(DebugTyrionInfo)
AUTOGENERATE_NAME(DisableRagdoll)
AUTOGENERATE_NAME(FlashlightShouldBeOnChanged)
AUTOGENERATE_NAME(GetDesiredFlashlightState)
AUTOGENERATE_NAME(GetDoor)
AUTOGENERATE_NAME(GetDoorKnowledge)
AUTOGENERATE_NAME(GetExtraCostForPoint)
AUTOGENERATE_NAME(GetQualifyTimeForToolkit)
AUTOGENERATE_NAME(InitializeDoorKnowledge)
AUTOGENERATE_NAME(InitiateViewportUse)
AUTOGENERATE_NAME(IsC2ChargeOnPlayersSide)
AUTOGENERATE_NAME(LocalPlayerIsToMyLeft)
AUTOGENERATE_NAME(MissionObjectiveTimeExpired)
AUTOGENERATE_NAME(NetworkClientLoading)
AUTOGENERATE_NAME(NetworkHostLoading)
AUTOGENERATE_NAME(NightvisionShouldBeOnChanged)
AUTOGENERATE_NAME(NotifyStartedMoving)
AUTOGENERATE_NAME(NotifyStoppedMoving)
AUTOGENERATE_NAME(OnAmmoInfoChanged)
AUTOGENERATE_NAME(OnArrestedStatusChanged)
AUTOGENERATE_NAME(OnConversationEnded)
AUTOGENERATE_NAME(OnCurrentLimpChanged)
AUTOGENERATE_NAME(OnDesiredAIEquipmentChanged)
AUTOGENERATE_NAME(OnLowReadyStatusChanged)
AUTOGENERATE_NAME(OnNonlethalEffectChanged)
AUTOGENERATE_NAME(OnReplicatedObserverCamTargetChanged)
AUTOGENERATE_NAME(OnReplicatedViewportTeammateChanged)
AUTOGENERATE_NAME(OnUsedByToolkit)
AUTOGENERATE_NAME(OnUsingByToolkitBegan)
AUTOGENERATE_NAME(OnUsingByToolkitInterrupted)
AUTOGENERATE_NAME(OnbIsTasedChanged)
AUTOGENERATE_NAME(PawnBelievesDoorLocked)
AUTOGENERATE_NAME(PlayerBlockingPath)
AUTOGENERATE_NAME(PlayerIsOnExternalSide)
AUTOGENERATE_NAME(PointIsOnExternalSide)
AUTOGENERATE_NAME(PostContextMatched)
AUTOGENERATE_NAME(PostDoorRelatedContextMatched)
AUTOGENERATE_NAME(PostDoorRelatedFocusAdded)
AUTOGENERATE_NAME(PostFocusAdded)
AUTOGENERATE_NAME(PostPlayerLogin)
AUTOGENERATE_NAME(PostReplication)
AUTOGENERATE_NAME(ReplicatedBackupWeaponClassInfoOnChanged)
AUTOGENERATE_NAME(ReplicatedEquipmentClassOnChanged)
AUTOGENERATE_NAME(ReplicatedMeshInfoOnChanged)
AUTOGENERATE_NAME(ReplicatedPrimaryWeaponClassInfoOnChanged)
AUTOGENERATE_NAME(ReplicatedSkinsOnChanged)
AUTOGENERATE_NAME(SetWeaponTargetLocation)
AUTOGENERATE_NAME(ShowAimingDebugInfo)
AUTOGENERATE_NAME(StopAllSounds)
AUTOGENERATE_NAME(TriggerNonLethaledEffectEvent)
AUTOGENERATE_NAME(UnTriggerNonLethaledEffectEvent)
AUTOGENERATE_NAME(isActive)

#ifndef NAMES_ONLY





// Constant MAX_PLAYERS is declared in "..\SwatGame\Classes\SwatPlayerController.uc"
#define UCONST_MAX_PLAYERS 16

// Enum MovingMode is declared in "..\SwatGame\Classes\SwatGamePlayerController.uc"
enum MovingMode
{
	 Moving_Standing         =0,
	 Moving_Walking          =1,
	 Moving_Running          =2,
	 Moving_MAX              =3,
};
// Enum NumberRow is declared in "..\SwatGame\Classes\SwatGamePlayerController.uc"
enum NumberRow
{
	 Row_FunctionKeys        =0,
	 Row_NumberKeys          =1,
	 Row_MAX                 =2,
};
// Enum FocusInterfaceNetMode is declared in "..\SwatGame\Classes\SwatGamePlayerController.uc"
enum FocusInterfaceNetMode
{
	 FNET_All                =0,
	 FNET_StandaloneOnly     =1,
	 FNET_MultiplayerOnly    =2,
	 FNET_MAX                =3,
};
// Enum EFocusInterface is declared in "..\SwatGame\Classes\SwatGamePlayerController.uc"
enum EFocusInterface
{
	 Focus_Use               =0,
	 Focus_Fire              =1,
	 Focus_ClassicCommand    =2,
	 Focus_GraphicCommand    =3,
	 Focus_PlayerTag         =4,
	 Focus_LowReady          =5,
	 Focus_SpeechRecognition =6,
	 Focus_MAX               =7,
};
// Struct FPlayerFocusInterfaceInfo	is declared	in "..\SwatGame\Classes\SwatGamePlayerController.uc"
struct SWATGAME_API FPlayerFocusInterfaceInfo
{
    BYTE Focus;
    class UClass* FocusClass;
    FName Label;
    BYTE ValidNetMode;
};

// Constant HALF_PI is declared in "..\SwatGame\Classes\SwatGamePlayerController.uc"
#define UCONST_HALF_PI 1.5707963268
// Constant kEndGameCamDistScaleForFastestYawDelta is declared in "..\SwatGame\Classes\SwatGamePlayerController.uc"
#define UCONST_kEndGameCamDistScaleForFastestYawDelta 0.0
// Constant kEndGameCamDistScaleForSlowestYawDelta is declared in "..\SwatGame\Classes\SwatGamePlayerController.uc"
#define UCONST_kEndGameCamDistScaleForSlowestYawDelta 7.5
// Constant kEndGameCamFastestYawDeltaPerSecond is declared in "..\SwatGame\Classes\SwatGamePlayerController.uc"
#define UCONST_kEndGameCamFastestYawDeltaPerSecond 20000.0
// Constant kEndGameCamSlowestYawDeltaPerSecond is declared in "..\SwatGame\Classes\SwatGamePlayerController.uc"
#define UCONST_kEndGameCamSlowestYawDeltaPerSecond 3000.0
// Constant kEndGameCamZOffset is declared in "..\SwatGame\Classes\SwatGamePlayerController.uc"
#define UCONST_kEndGameCamZOffset 12.0
// Constant kEndGameCamRotationPitch is declared in "..\SwatGame\Classes\SwatGamePlayerController.uc"
#define UCONST_kEndGameCamRotationPitch -4563
// Constant kEndGameCamDesiredDistScale is declared in "..\SwatGame\Classes\SwatGamePlayerController.uc"
#define UCONST_kEndGameCamDesiredDistScale 10.0
// Constant kDeathCamZOffset is declared in "..\SwatGame\Classes\SwatGamePlayerController.uc"
#define UCONST_kDeathCamZOffset 12.0
// Constant kDeathCamEndDistanceScale is declared in "..\SwatGame\Classes\SwatGamePlayerController.uc"
#define UCONST_kDeathCamEndDistanceScale 12.0
// Constant kDeathCamStartDistanceScale is declared in "..\SwatGame\Classes\SwatGamePlayerController.uc"
#define UCONST_kDeathCamStartDistanceScale 3.0
// Constant kDeathCamEndRotationDownPitch is declared in "..\SwatGame\Classes\SwatGamePlayerController.uc"
#define UCONST_kDeathCamEndRotationDownPitch -4563
// Constant kDeathCamDurationSeconds is declared in "..\SwatGame\Classes\SwatGamePlayerController.uc"
#define UCONST_kDeathCamDurationSeconds 2.0

// "event"	function whose parameters correspond to	"struct ASwatGamePlayerController_eventOnReplicatedObserverCamTargetChanged_Parms"	is declared	in "..\SwatGame\Classes\SwatGamePlayerController.uc"
struct ASwatGamePlayerController_eventOnReplicatedObserverCamTargetChanged_Parms
{
};
// "event"	function whose parameters correspond to	"struct ASwatGamePlayerController_eventActivateViewport_Parms"	is declared	in "..\SwatGame\Classes\SwatGamePlayerController.uc"
struct ASwatGamePlayerController_eventActivateViewport_Parms
{
	  class IIControllableViewport* inNewViewport;
};
// "event"	function whose parameters correspond to	"struct ASwatGamePlayerController_eventOnReplicatedViewportTeammateChanged_Parms"	is declared	in "..\SwatGame\Classes\SwatGamePlayerController.uc"
struct ASwatGamePlayerController_eventOnReplicatedViewportTeammateChanged_Parms
{
};
// "event"	function whose parameters correspond to	"struct ASwatGamePlayerController_eventInitiateViewportUse_Parms"	is declared	in "..\SwatGame\Classes\SwatGamePlayerController.uc"
struct ASwatGamePlayerController_eventInitiateViewportUse_Parms
{
	  class IIControllableViewport* inNewViewport;
};


// "event"	function whose parameters correspond to	"struct ADoorWay_eventGetDoor_Parms"	is declared	in "..\SwatGame\Classes\Doors\DoorWay.uc"
struct ADoorWay_eventGetDoor_Parms
{
	  class ASwatDoor* ReturnValue;
};

// Enum SwitchTeamErrorState is declared in "..\SwatGame\Classes\GameModes\GameMode.uc"
enum SwitchTeamErrorState
{
	 TeamSwitch_OK           =0,
	 TeamSwitch_TeamsLocked  =1,
	 TeamSwitch_TeamsBalance =2,
	 TeamSwitch_Max          =3,
	 TeamSwitch_PlayerLocked =4,
	 TeamSwitch_MAX          =5,
};


// Struct FDebugLine	is declared	in "..\SwatGame\Classes\SwatHUD.uc"
struct SWATGAME_API FDebugLine
{
    FVector EndA;
    FVector EndB;
    FColor Color;
    FLOAT LifeSpan;
};

// Struct FDebugCone	is declared	in "..\SwatGame\Classes\SwatHUD.uc"
struct SWATGAME_API FDebugCone
{
    FVector Origin;
    FVector direction;
    FLOAT Length;
    FLOAT HalfAngle;
    FColor Color;
    FLOAT LifeSpan;
};



// Enum ESwatRoundOutcome is declared in "..\SwatGame\Classes\SwatGameInfo.uc"
enum ESwatRoundOutcome
{
	 SRO_SwatVictoriousNormal=0,
	 SRO_SuspectsVictoriousNormal=1,
	 SRO_SwatVictoriousRapidDeployment=2,
	 SRO_SuspectsVictoriousRapidDeployment=3,
	 SRO_RoundEndedInTie     =4,
	 SRO_SwatVictoriousVIPEscaped=5,
	 SRO_SuspectsVictoriousKilledVIPValid=6,
	 SRO_SwatVictoriousSuspectsKilledVIPInvalid=7,
	 SRO_SuspectsVictoriousSwatKilledVIP=8,
	 SRO_COOPCompleted       =9,
	 SRO_COOPFailed          =10,
	 SRO_SwatVictoriousSmashAndGrab=11,
	 SRO_SuspectsVictoriousSmashAndGrab=12,
	 SRO_MAX                 =13,
};
// Enum EMPTeam is declared in "..\SwatGame\Classes\SwatGameInfo.uc"
enum EMPTeam
{
	 MPT_Swat                =0,
	 MPT_Suspects            =1,
	 MPT_MAX                 =2,
};

// "event"	function whose parameters correspond to	"struct ASwatGameInfo_eventMissionObjectiveTimeExpired_Parms"	is declared	in "..\SwatGame\Classes\SwatGameInfo.uc"
struct ASwatGameInfo_eventMissionObjectiveTimeExpired_Parms
{
};

// Enum MaterialPocket is declared in "..\SwatGame\Classes\LoadOut\LoadOutValidationBase.uc"
enum MaterialPocket
{
	 MATERIAL_Pants          =0,
	 MATERIAL_Face           =1,
	 MATERIAL_Name           =2,
	 MATERIAL_Vest           =3,
	 MATERIAL_HeavyPants     =4,
	 MATERIAL_HeavyVest      =5,
	 MATERIAL_NoArmourVest   =6,
	 MATERIAL_MAX            =7,
};



// Enum EMirroringSide is declared in "..\SwatGame\Classes\MirrorPoint.uc"
enum EMirroringSide
{
	 MirrorToLeft            =0,
	 MirrorToRight           =1,
};

// Enum EMoveReason is declared in "..\SwatGame\Classes\Doors\SwatDoor.uc"
enum EMoveReason
{
	 MR_Interacted           =0,
	 MR_Breached             =1,
	 MR_Blasted              =2,
	 MR_MAX                  =3,
};
// Enum EExternalSide is declared in "..\SwatGame\Classes\Doors\SwatDoor.uc"
enum EExternalSide
{
	 ES_NeitherSide          =0,
	 ES_LeftSide             =1,
	 ES_RightSide            =2,
	 ES_MAX                  =3,
};
// Enum ECommandDirection is declared in "..\SwatGame\Classes\Doors\SwatDoor.uc"
enum ECommandDirection
{
	 CD_BothSides            =0,
	 CD_LeftSide             =1,
	 CD_RightSide            =2,
	 CD_NeitherSide          =3,
	 CD_MAX                  =4,
};
// Struct FDoorAttachmentSpec	is declared	in "..\SwatGame\Classes\Doors\SwatDoor.uc"
struct SWATGAME_API FDoorAttachmentSpec
{
    class UStaticMesh* StaticMesh;
    FName AttachSocket;
    FVector AttachLocationOffset;
    FRotator AttachRotationOffset;
};


// "event"	function whose parameters correspond to	"struct ASwatDoor_eventIsC2ChargeOnPlayersSide_Parms"	is declared	in "..\SwatGame\Classes\Doors\SwatDoor.uc"
struct ASwatDoor_eventIsC2ChargeOnPlayersSide_Parms
{
	  BITFIELD ReturnValue;
};
// "event"	function whose parameters correspond to	"struct ASwatDoor_eventPawnBelievesDoorLocked_Parms"	is declared	in "..\SwatGame\Classes\Doors\SwatDoor.uc"
struct ASwatDoor_eventPawnBelievesDoorLocked_Parms
{
	  class ASwatPawn* Pawn;
	  BITFIELD ReturnValue;
};
// "event"	function whose parameters correspond to	"struct ASwatDoor_eventPlayerIsOnExternalSide_Parms"	is declared	in "..\SwatGame\Classes\Doors\SwatDoor.uc"
struct ASwatDoor_eventPlayerIsOnExternalSide_Parms
{
	  BITFIELD ReturnValue;
};
// "event"	function whose parameters correspond to	"struct ASwatDoor_eventPointIsOnExternalSide_Parms"	is declared	in "..\SwatGame\Classes\Doors\SwatDoor.uc"
struct ASwatDoor_eventPointIsOnExternalSide_Parms
{
	  FVector Point;
	  BITFIELD ReturnValue;
};
// "event"	function whose parameters correspond to	"struct ASwatDoor_eventLocalPlayerIsToMyLeft_Parms"	is declared	in "..\SwatGame\Classes\Doors\SwatDoor.uc"
struct ASwatDoor_eventLocalPlayerIsToMyLeft_Parms
{
	  BITFIELD ReturnValue;
};
// Constant kDoubleDoorWidth is declared in "..\SwatGame\Classes\Doors\DoubleDoor.uc"
#define UCONST_kDoubleDoorWidth 156.0

// Constant kSingleDoorWidth is declared in "..\SwatGame\Classes\Doors\SingleDoor.uc"
#define UCONST_kSingleDoorWidth 78.0

// Enum EEntryType is declared in "..\SwatGame\Classes\SwatStartPointBase.uc"
enum EEntryType
{
	 ET_Primary              =0,
	 ET_Secondary            =1,
	 ET_MAX                  =2,
};

// Enum EOfficerStartType is declared in "..\SwatGame\Classes\AI\SwatOfficerStart.uc"
enum EOfficerStartType
{
	 RedOneStart             =0,
	 RedTwoStart             =1,
	 BlueOneStart            =2,
	 BlueTwoStart            =3,
};


// Enum ELeanTransitionState is declared in "..\SwatGame\Classes\SwatPawn.uc"
enum ELeanTransitionState
{
	 kLST_LeanLeft           =0,
	 kLST_LeanRight          =1,
	 kLST_UnleanLeft         =2,
	 kLST_UnleanRight        =3,
	 kLST_MAX                =4,
};
// Enum EAnimAimType is declared in "..\SwatGame\Classes\SwatPawn.uc"
enum EAnimAimType
{
	 kAAT_None               =0,
	 kAAT_Rotation           =1,
	 kAAT_Point              =2,
	 kAAT_Actor              =3,
	 kAAT_MAX                =4,
};
// Enum EAnimAimRotationUrgency is declared in "..\SwatGame\Classes\SwatPawn.uc"
enum EAnimAimRotationUrgency
{
	 kAARU_Normal            =0,
	 kAARU_Fast              =1,
	 kAARU_MAX               =2,
};
// Enum EAnimRotationUrgency is declared in "..\SwatGame\Classes\SwatPawn.uc"
enum EAnimRotationUrgency
{
	 kARU_Normal             =0,
	 kARU_Fast               =1,
	 kARU_VeryFast           =2,
	 kARU_Instant            =3,
	 kARU_MAX                =4,
};
// Enum EAnimFlag is declared in "..\SwatGame\Classes\SwatPawn.uc"
enum EAnimFlag
{
	 kAF_TurnInPlace         =0,
	 kAF_Move                =1,
	 kAF_Aim                 =2,
	 kAF_Equipment           =3,
	 kAF_Special             =4,
	 kAF_MAX                 =5,
};
// Constant kDeathRenderBoundingBoxExpansionSize is declared in "..\SwatGame\Classes\SwatPawn.uc"
#define UCONST_kDeathRenderBoundingBoxExpansionSize 100.0
// Constant kAimRightLimitDegrees is declared in "..\SwatGame\Classes\SwatPawn.uc"
#define UCONST_kAimRightLimitDegrees 77.0f
// Constant kAimLeftLimitDegrees is declared in "..\SwatGame\Classes\SwatPawn.uc"
#define UCONST_kAimLeftLimitDegrees 54.0f
// Constant kAimLowLimitDegrees is declared in "..\SwatGame\Classes\SwatPawn.uc"
#define UCONST_kAimLowLimitDegrees 62.0f
// Constant kAimHighLimitDegrees is declared in "..\SwatGame\Classes\SwatPawn.uc"
#define UCONST_kAimHighLimitDegrees 70.0f

// "event"	function whose parameters correspond to	"struct ASwatPawn_eventStopAllSounds_Parms"	is declared	in "..\SwatGame\Classes\SwatPawn.uc"
struct ASwatPawn_eventStopAllSounds_Parms
{
};
// "event"	function whose parameters correspond to	"struct ASwatPawn_eventNightvisionShouldBeOnChanged_Parms"	is declared	in "..\SwatGame\Classes\SwatPawn.uc"
struct ASwatPawn_eventNightvisionShouldBeOnChanged_Parms
{
};
// "event"	function whose parameters correspond to	"struct ASwatPawn_eventFlashlightShouldBeOnChanged_Parms"	is declared	in "..\SwatGame\Classes\SwatPawn.uc"
struct ASwatPawn_eventFlashlightShouldBeOnChanged_Parms
{
};
// "event"	function whose parameters correspond to	"struct ASwatPawn_eventGetDesiredFlashlightState_Parms"	is declared	in "..\SwatGame\Classes\SwatPawn.uc"
struct ASwatPawn_eventGetDesiredFlashlightState_Parms
{
	  BITFIELD ReturnValue;
};
// "event"	function whose parameters correspond to	"struct ASwatPawn_eventInitializeDoorKnowledge_Parms"	is declared	in "..\SwatGame\Classes\SwatPawn.uc"
struct ASwatPawn_eventInitializeDoorKnowledge_Parms
{
	  class ADoor* inDoor;
	  class UPawnDoorKnowledge* DoorKnowledge;
};
// "event"	function whose parameters correspond to	"struct ASwatPawn_eventGetDoorKnowledge_Parms"	is declared	in "..\SwatGame\Classes\SwatPawn.uc"
struct ASwatPawn_eventGetDoorKnowledge_Parms
{
	  class ADoor* inDoor;
	  class UPawnDoorKnowledge* ReturnValue;
};
// "event"	function whose parameters correspond to	"struct ASwatPawn_eventOnLowReadyStatusChanged_Parms"	is declared	in "..\SwatGame\Classes\SwatPawn.uc"
struct ASwatPawn_eventOnLowReadyStatusChanged_Parms
{
};
// "event"	function whose parameters correspond to	"struct ASwatPawn_eventOnArrestedStatusChanged_Parms"	is declared	in "..\SwatGame\Classes\SwatPawn.uc"
struct ASwatPawn_eventOnArrestedStatusChanged_Parms
{
};
// "event"	function whose parameters correspond to	"struct ASwatPawn_eventOnbIsTasedChanged_Parms"	is declared	in "..\SwatGame\Classes\SwatPawn.uc"
struct ASwatPawn_eventOnbIsTasedChanged_Parms
{
};
// "event"	function whose parameters correspond to	"struct ASwatPawn_eventOnNonlethalEffectChanged_Parms"	is declared	in "..\SwatGame\Classes\SwatPawn.uc"
struct ASwatPawn_eventOnNonlethalEffectChanged_Parms
{
};
// Enum ETwitchType is declared in "..\SwatGame\Classes\SwatRagdollPawn.uc"
enum ETwitchType
{
	 ETWITCH_Torque          =0,
	 ETWITCH_LinearVelocity  =1,
	 ETWITCH_Force           =2,
	 ETWITCH_Impulse         =3,
	 ETWITCH_MAX             =4,
};
// Struct FTwitchingBoneInfo	is declared	in "..\SwatGame\Classes\SwatRagdollPawn.uc"
struct SWATGAME_API FTwitchingBoneInfo
{
    FName BoneName;
    FRange ForceMagnitude;
    FVector ForceVector;
    FName TargetBoneName;
    FVector TargetForceNormal;
    BYTE TwitchType;
};

// Struct FBoneDampingSetting	is declared	in "..\SwatGame\Classes\SwatRagdollPawn.uc"
struct SWATGAME_API FBoneDampingSetting
{
    FName BoneName;
    FLOAT Damping;
};

// Constant kDeadPawnTearOffDelaySeconds is declared in "..\SwatGame\Classes\SwatRagdollPawn.uc"
#define UCONST_kDeadPawnTearOffDelaySeconds 5.0
// Constant kRagdollCollisionRadius is declared in "..\SwatGame\Classes\SwatRagdollPawn.uc"
#define UCONST_kRagdollCollisionRadius 72

// "event"	function whose parameters correspond to	"struct ASwatRagdollPawn_eventDisableRagdoll_Parms"	is declared	in "..\SwatGame\Classes\SwatRagdollPawn.uc"
struct ASwatRagdollPawn_eventDisableRagdoll_Parms
{
	  BITFIELD bKeepHavokPhysics;
};
// Struct FUpperBodyAnimBehaviorEntry	is declared	in "..\SwatGame\Classes\AI\SwatAI.uc"
struct SWATGAME_API FUpperBodyAnimBehaviorEntry
{
    BYTE behavior;
    INT clientId;
};

// Constant MaxAIWaitForEffectEventToFinish is declared in "..\SwatGame\Classes\AI\SwatAI.uc"
#define UCONST_MaxAIWaitForEffectEventToFinish 10.0
// Constant kPalmOffsetFromShoulder is declared in "..\SwatGame\Classes\AI\SwatAI.uc"
#define UCONST_kPalmOffsetFromShoulder 45.0
// Constant kMaxCanHitWeaponTraceToggleTime is declared in "..\SwatGame\Classes\AI\SwatAI.uc"
#define UCONST_kMaxCanHitWeaponTraceToggleTime 3.0
// Constant kMinCanHitWeaponTraceToggleTime is declared in "..\SwatGame\Classes\AI\SwatAI.uc"
#define UCONST_kMinCanHitWeaponTraceToggleTime 1.0
// Constant kAIPathCostInCover is declared in "..\SwatGame\Classes\AI\SwatAI.uc"
#define UCONST_kAIPathCostInCover 0.0
// Constant kAIPathCostInLowCover is declared in "..\SwatGame\Classes\AI\SwatAI.uc"
#define UCONST_kAIPathCostInLowCover 1000.0
// Constant kAIPathCostNotInCover is declared in "..\SwatGame\Classes\AI\SwatAI.uc"
#define UCONST_kAIPathCostNotInCover 10000.0

// "event"	function whose parameters correspond to	"struct ASwatAI_eventShowAimingDebugInfo_Parms"	is declared	in "..\SwatGame\Classes\AI\SwatAI.uc"
struct ASwatAI_eventShowAimingDebugInfo_Parms
{
};
// "event"	function whose parameters correspond to	"struct ASwatAI_eventDebugTyrionInfo_Parms"	is declared	in "..\SwatGame\Classes\AI\SwatAI.uc"
struct ASwatAI_eventDebugTyrionInfo_Parms
{
	  class UAI_Resource* resource;
};
// "event"	function whose parameters correspond to	"struct ASwatAI_eventSetWeaponTargetLocation_Parms"	is declared	in "..\SwatGame\Classes\AI\SwatAI.uc"
struct ASwatAI_eventSetWeaponTargetLocation_Parms
{
	  FVector TargetLocation;
};
// "event"	function whose parameters correspond to	"struct ASwatAI_eventPlayerBlockingPath_Parms"	is declared	in "..\SwatGame\Classes\AI\SwatAI.uc"
struct ASwatAI_eventPlayerBlockingPath_Parms
{
};
// "event"	function whose parameters correspond to	"struct ASwatAI_eventGetExtraCostForPoint_Parms"	is declared	in "..\SwatGame\Classes\AI\SwatAI.uc"
struct ASwatAI_eventGetExtraCostForPoint_Parms
{
	  class ANavigationPoint* Point;
	  FLOAT ReturnValue;
};
// "event"	function whose parameters correspond to	"struct ASwatAI_eventNotifyStoppedMoving_Parms"	is declared	in "..\SwatGame\Classes\AI\SwatAI.uc"
struct ASwatAI_eventNotifyStoppedMoving_Parms
{
};
// "event"	function whose parameters correspond to	"struct ASwatAI_eventNotifyStartedMoving_Parms"	is declared	in "..\SwatGame\Classes\AI\SwatAI.uc"
struct ASwatAI_eventNotifyStartedMoving_Parms
{
};
// Constant kMaxAwarenessUpdateTime is declared in "..\SwatGame\Classes\AI\SwatAICharacter.uc"
#define UCONST_kMaxAwarenessUpdateTime 0.666
// Constant kMinAwarenessUpdateTime is declared in "..\SwatGame\Classes\AI\SwatAICharacter.uc"
#define UCONST_kMinAwarenessUpdateTime 0.333

// "event"	function whose parameters correspond to	"struct ASwatAICharacter_eventOnDesiredAIEquipmentChanged_Parms"	is declared	in "..\SwatGame\Classes\AI\SwatAICharacter.uc"
struct ASwatAICharacter_eventOnDesiredAIEquipmentChanged_Parms
{
};
// "event"	function whose parameters correspond to	"struct ASwatAICharacter_eventReplicatedEquipmentClassOnChanged_Parms"	is declared	in "..\SwatGame\Classes\AI\SwatAICharacter.uc"
struct ASwatAICharacter_eventReplicatedEquipmentClassOnChanged_Parms
{
	  class UClass* EquipmentClass;
};
// "event"	function whose parameters correspond to	"struct ASwatAICharacter_eventReplicatedSkinsOnChanged_Parms"	is declared	in "..\SwatGame\Classes\AI\SwatAICharacter.uc"
struct ASwatAICharacter_eventReplicatedSkinsOnChanged_Parms
{
	  INT SkinIndex;
};
// "event"	function whose parameters correspond to	"struct ASwatAICharacter_eventReplicatedMeshInfoOnChanged_Parms"	is declared	in "..\SwatGame\Classes\AI\SwatAICharacter.uc"
struct ASwatAICharacter_eventReplicatedMeshInfoOnChanged_Parms
{
};
// Constant maxWeaponDistance is declared in "..\SwatGame\Classes\AI\SwatEnemy.uc"
#define UCONST_maxWeaponDistance 200.0f

// "event"	function whose parameters correspond to	"struct ASwatEnemy_eventActorIsInSameOrAdjacentZoneAsMe_Parms"	is declared	in "..\SwatGame\Classes\AI\SwatEnemy.uc"
struct ASwatEnemy_eventActorIsInSameOrAdjacentZoneAsMe_Parms
{
	  class AActor* theOtherActor;
	  BITFIELD ReturnValue;
};
// "event"	function whose parameters correspond to	"struct ASwatEnemy_eventReplicatedBackupWeaponClassInfoOnChanged_Parms"	is declared	in "..\SwatGame\Classes\AI\SwatEnemy.uc"
struct ASwatEnemy_eventReplicatedBackupWeaponClassInfoOnChanged_Parms
{
};
// "event"	function whose parameters correspond to	"struct ASwatEnemy_eventReplicatedPrimaryWeaponClassInfoOnChanged_Parms"	is declared	in "..\SwatGame\Classes\AI\SwatEnemy.uc"
struct ASwatEnemy_eventReplicatedPrimaryWeaponClassInfoOnChanged_Parms
{
};


// Constant kMaxNotifyStoppedMovingTime is declared in "..\SwatGame\Classes\AI\SwatOfficer.uc"
#define UCONST_kMaxNotifyStoppedMovingTime 1.25
// Constant kMinNotifyStoppedMovingTime is declared in "..\SwatGame\Classes\AI\SwatOfficer.uc"
#define UCONST_kMinNotifyStoppedMovingTime 0.75

// Enum ELastStingWeapon is declared in "..\SwatGame\Classes\SwatPlayer.uc"
enum ELastStingWeapon
{
	 stingGrenade            =0,
	 LessLethalShotgun       =1,
	 TripleBatonRound        =2,
	 DirectGrenadeHit        =3,
	 MeleeAttack             =4,
};
// Constant OneFrameNudgeDirectionStrength is declared in "..\SwatGame\Classes\SwatPlayer.uc"
#define UCONST_OneFrameNudgeDirectionStrength 2.0

// "event"	function whose parameters correspond to	"struct ASwatPlayer_eventUnTriggerNonLethaledEffectEvent_Parms"	is declared	in "..\SwatGame\Classes\SwatPlayer.uc"
struct ASwatPlayer_eventUnTriggerNonLethaledEffectEvent_Parms
{
	  FName EffectEventName;
};
// "event"	function whose parameters correspond to	"struct ASwatPlayer_eventTriggerNonLethaledEffectEvent_Parms"	is declared	in "..\SwatGame\Classes\SwatPlayer.uc"
struct ASwatPlayer_eventTriggerNonLethaledEffectEvent_Parms
{
	  FName EffectEventName;
};
// "event"	function whose parameters correspond to	"struct ASwatPlayer_eventApplyOneFrameNudgeRotationOffset_Parms"	is declared	in "..\SwatGame\Classes\SwatPlayer.uc"
struct ASwatPlayer_eventApplyOneFrameNudgeRotationOffset_Parms
{
	  FVector Acceleration;
};
// "event"	function whose parameters correspond to	"struct ASwatPlayer_eventApplyStungRotationOffset_Parms"	is declared	in "..\SwatGame\Classes\SwatPlayer.uc"
struct ASwatPlayer_eventApplyStungRotationOffset_Parms
{
	  FVector Acceleration;
};
// "event"	function whose parameters correspond to	"struct ASwatPlayer_eventOnCurrentLimpChanged_Parms"	is declared	in "..\SwatGame\Classes\SwatPlayer.uc"
struct ASwatPlayer_eventOnCurrentLimpChanged_Parms
{
};
// Constant MAX_CLIPS is declared in "..\SwatGame\Classes\Net\NetPlayer.uc"
#define UCONST_MAX_CLIPS 10

// "event"	function whose parameters correspond to	"struct ANetPlayer_eventOnAmmoInfoChanged_Parms"	is declared	in "..\SwatGame\Classes\Net\NetPlayer.uc"
struct ANetPlayer_eventOnAmmoInfoChanged_Parms
{
};
// "event"	function whose parameters correspond to	"struct ANetPlayer_eventPostReplication_Parms"	is declared	in "..\SwatGame\Classes\Net\NetPlayer.uc"
struct ANetPlayer_eventPostReplication_Parms
{
};
// "event"	function whose parameters correspond to	"struct ANetPlayer_eventAllVarsHaveReplicated_Parms"	is declared	in "..\SwatGame\Classes\Net\NetPlayer.uc"
struct ANetPlayer_eventAllVarsHaveReplicated_Parms
{
	  BITFIELD ReturnValue;
};
// Enum DoorPart is declared in "..\SwatGame\Classes\PlayerInteraction\PlayerFocusInterface.uc"
enum DoorPart
{
	 DoorPart_Animation      =0,
	 DoorPart_Model          =1,
	 DoorPart_Way            =2,
	 DoorPart_Any            =3,
	 DoorPart_MAX            =4,
};
// Struct FFocus	is declared	in "..\SwatGame\Classes\PlayerInteraction\PlayerFocusInterface.uc"
struct SWATGAME_API FFocus
{
    FName Context;
    class AActor* Actor;
    FVector Location;
    FVector Normal;
    class UMaterial* Material;
    BYTE Region;
};

// Constant MAX_FOCI is declared in "..\SwatGame\Classes\PlayerInteraction\PlayerFocusInterface.uc"
#define UCONST_MAX_FOCI 3

// "event"	function whose parameters correspond to	"struct APlayerFocusInterface_eventPostDoorRelatedFocusAdded_Parms"	is declared	in "..\SwatGame\Classes\PlayerInteraction\PlayerFocusInterface.uc"
struct APlayerFocusInterface_eventPostDoorRelatedFocusAdded_Parms
{
	  class UPlayerInterfaceDoorRelatedContext* Context;
	  class AActor* Target;
	  BYTE SkeletalRegionHit;
};
// "event"	function whose parameters correspond to	"struct APlayerFocusInterface_eventPostFocusAdded_Parms"	is declared	in "..\SwatGame\Classes\PlayerInteraction\PlayerFocusInterface.uc"
struct APlayerFocusInterface_eventPostFocusAdded_Parms
{
	  class UPlayerInterfaceContext* Context;
	  class AActor* Target;
	  BYTE SkeletalRegionHit;
};
// "event"	function whose parameters correspond to	"struct APlayerFocusInterface_eventAddFocus_Parms"	is declared	in "..\SwatGame\Classes\PlayerInteraction\PlayerFocusInterface.uc"
struct APlayerFocusInterface_eventAddFocus_Parms
{
	  FName Context;
	  class AActor* Actor;
	  FVector Location;
	  FVector Normal;
	  class UMaterial* Material;
	  BYTE Region;
};
// "event"	function whose parameters correspond to	"struct APlayerFocusInterface_eventPostDoorRelatedContextMatched_Parms"	is declared	in "..\SwatGame\Classes\PlayerInteraction\PlayerFocusInterface.uc"
struct APlayerFocusInterface_eventPostDoorRelatedContextMatched_Parms
{
	  class UPlayerInterfaceDoorRelatedContext* Context;
	  class AActor* Target;
};
// "event"	function whose parameters correspond to	"struct APlayerFocusInterface_eventPostContextMatched_Parms"	is declared	in "..\SwatGame\Classes\PlayerInteraction\PlayerFocusInterface.uc"
struct APlayerFocusInterface_eventPostContextMatched_Parms
{
	  class UPlayerInterfaceContext* Context;
	  class AActor* Target;
};
// Enum ECommand is declared in "..\SwatGame\Classes\PlayerInteraction\CommandInterface.uc"
enum ECommand
{
	 Command_None            =0,
	 Command_Command         =1,
	 Command_Deploy          =2,
	 Command_Zulu            =3,
	 Command_StackUpAndTryDoor=4,
	 Command_PickLock        =5,
	 Command_MoveAndClear    =6,
	 Command_BreachAndClear  =7,
	 Command_BreachAndMakeEntry=8,
	 Command_OpenAndClear    =9,
	 Command_OpenAndMakeEntry=10,
	 Command_BangAndClear    =11,
	 Command_BreachBangAndClear=12,
	 Command_BreachBangAndMakeEntry=13,
	 Command_OpenBangAndClear=14,
	 Command_OpenBangAndMakeEntry=15,
	 Command_GasAndClear     =16,
	 Command_BreachGasAndClear=17,
	 Command_BreachGasAndMakeEntry=18,
	 Command_OpenGasAndClear =19,
	 Command_OpenGasAndMakeEntry=20,
	 Command_StingAndClear   =21,
	 Command_BreachStingAndClear=22,
	 Command_BreachStingAndMakeEntry=23,
	 Command_OpenStingAndClear=24,
	 Command_OpenStingAndMakeEntry=25,
	 Command_FallIn          =26,
	 Command_MoveTo          =27,
	 Command_Cover           =28,
	 Command_Disable         =29,
	 Command_Drop_Lightstick =30,
	 Command_Padding         =31,
	 Command_CloseDoor       =32,
	 Command_RemoveWedge     =33,
	 Command_SecureEvidence  =34,
	 Command_Restrain        =35,
	 Command_MirrorRoom      =36,
	 Command_MirrorUnderDoor =37,
	 Command_MirrorCorner    =38,
	 Command_CheckForTraps   =39,
	 Command_Deploy_Wedge    =40,
	 Command_Deploy_BreachingShotgun=41,
	 Command_Deploy_LessLethalShotgun=42,
	 Command_Deploy_GrenadeLauncher=43,
	 Command_Deploy_Taser    =44,
	 Command_Deploy_Flashbang=45,
	 Command_Deploy_CSGas    =46,
	 Command_Deploy_StingGrenade=47,
	 Command_Deploy_PepperSpray=48,
	 Command_Deploy_C2Charge =49,
	 Command_Deploy_CSBallLauncher=50,
	 Command_Deploy_Lightstick=51,
	 Command_Open            =52,
	 Command_Breach          =53,
	 Command_Investigate     =54,
	 Command_Move            =55,
	 Command_Response_PosNegPage=56,
	 Command_Response_MovingPage=57,
	 Command_Response_Mirror =58,
	 Command_StackUpMP       =59,
	 Command_Preferences     =60,
	 Command_LeaderThrowAndClear=61,
	 Command_BreachLeaderThrowAndClear=62,
	 Command_BreachLeaderThrowAndMakeEntry=63,
	 Command_OpenLeaderThrowAndClear=64,
	 Command_OpenLeaderThrowAndMakeEntry=65,
	 Command_C2AndClear      =66,
	 Command_C2BangAndClear  =67,
	 Command_C2GasAndClear   =68,
	 Command_C2StingAndClear =69,
	 Command_C2LeaderThrowAndClear=70,
	 Command_C2AndMakeEntry  =71,
	 Command_C2BangAndMakeEntry=72,
	 Command_C2GasAndMakeEntry=73,
	 Command_C2StingAndMakeEntry=74,
	 Command_C2LeaderThrowAndMakeEntry=75,
	 Command_ShotgunAndClear =76,
	 Command_ShotgunBangAndClear=77,
	 Command_ShotgunGasAndClear=78,
	 Command_ShotgunStingAndClear=79,
	 Command_ShotgunLeaderThrowAndClear=80,
	 Command_ShotgunAndMakeEntry=81,
	 Command_ShotgunBangAndMakeEntry=82,
	 Command_ShotgunGasAndMakeEntry=83,
	 Command_ShotgunStingAndMakeEntry=84,
	 Command_ShotgunLeaderThrowAndMakeEntry=85,
	 Command_CleanSweep      =86,
	 Command_RestrainAll     =87,
	 Command_SecureAll       =88,
	 Command_DisableAll      =89,
	 Command_Request         =90,
	 Command_Request_Flashbang=91,
	 Command_Request_CSGas   =92,
	 Command_Request_Stinger =93,
	 Command_Request_Pepperspray=94,
	 Command_Request_Optiwand=95,
	 Command_Request_Wedge   =96,
	 Command_Request_Lightstick=97,
	 Command_Request_C2      =98,
	 Command_TrapsAndMirror  =99,
	 Command_Static          =100,
	 Command_MAX             =101,
};
// Enum MenuPadStatus is declared in "..\SwatGame\Classes\PlayerInteraction\CommandInterface.uc"
enum MenuPadStatus
{
	 Pad_Normal              =0,
	 Pad_GreyedOut           =1,
	 Pad_Disabled            =2,
	 Pad_MAX                 =3,
};
// Enum CommandInterfacePage is declared in "..\SwatGame\Classes\PlayerInteraction\CommandInterface.uc"
enum CommandInterfacePage
{
	 Page_None               =0,
	 Page_Command            =1,
	 Page_Deploy             =2,
	 Page_Response           =3,
	 Page_RapidDeployment    =4,
	 Page_VIPEscort          =5,
	 Page_General            =6,
	 Page_MAX                =7,
};

// "event"	function whose parameters correspond to	"struct ACommandInterface_eventColorizeExpectedCommand_Parms"	is declared	in "..\SwatGame\Classes\PlayerInteraction\CommandInterface.uc"
struct ACommandInterface_eventColorizeExpectedCommand_Parms
{
	  class UCommand* Command;
	  FString ReturnValue;
};





// Enum EStartPointDependent is declared in "..\SwatGame\Classes\Spawning\Spawner.uc"
enum EStartPointDependent
{
	 StartPoint_Any          =0,
	 StartPoint_OnlyPrimary  =1,
	 StartPoint_OnlySecondary=2,
	 StartPoint_MAX          =3,
};
// Enum EMissionSpawn is declared in "..\SwatGame\Classes\Spawning\Spawner.uc"
enum EMissionSpawn
{
	 MissionSpawn_Any        =0,
	 MissionSpawn_CustomOnly =1,
	 MissionSpawn_CampaignOnly=2,
	 MissionSpawn_MAX        =3,
};
// Enum ESpawnMode is declared in "..\SwatGame\Classes\Spawning\Spawner.uc"
enum ESpawnMode
{
	 SpawnMode_Normal        =0,
	 SpawnMode_Slave         =1,
	 SpawnMode_SlaveOnly     =2,
	 SpawnMode_MAX           =3,
};








// Enum EArchetypeCategory is declared in "..\SwatGame\Classes\Archetypes\Archetype.uc"
enum EArchetypeCategory
{
	 Archetype_Enemy         =0,
	 Archetype_Hostage       =1,
	 Archetype_Inanimate     =2,
	 Archetype_MAX           =3,
};
// Struct FChanceArchetypePair	is declared	in "..\SwatGame\Classes\Archetypes\Archetype.uc"
struct SWATGAME_API FChanceArchetypePair
{
    INT Chance;
    FName Archetype;
};





// Struct FDialogLine	is declared	in "..\SwatGame\Classes\Conversation\Conversation.uc"
struct SWATGAME_API FDialogLine
{
    FName Speaker;
    FName Speech;
    BITFIELD Skippable:1;
    FLOAT DelayAfter;
};


// "event"	function whose parameters correspond to	"struct UConversation_eventOnConversationEnded_Parms"	is declared	in "..\SwatGame\Classes\Conversation\Conversation.uc"
struct UConversation_eventOnConversationEnded_Parms
{
	  class UConversation* Conversation;
	  BITFIELD Completed;
};
// Struct FScreenLocation	is declared	in "..\SwatGame\Classes\HUD\GUIGraphicCommandInterface.uc"
struct SWATGAME_API FScreenLocation
{
    FLOAT X;
    FLOAT Y;
};

// Constant MAX_COMMANDS_PER_PAGE is declared in "..\SwatGame\Classes\HUD\GUIGraphicCommandInterface.uc"
#define UCONST_MAX_COMMANDS_PER_PAGE 20


// Constant MAX_COMMANDS_PER_PAGE is declared in "..\SwatGame\Classes\HUD\GUIGraphicCommandInterfaceMenu.uc"
#define UCONST_MAX_COMMANDS_PER_PAGE 13


// "event"	function whose parameters correspond to	"struct IIAmUsedByToolkit_eventGetQualifyTimeForToolkit_Parms"	is declared	in "..\SwatGame\Classes\Equipment\IAmUsedByToolkit.uc"
struct IIAmUsedByToolkit_GetQualifyTimeForToolkit_Parms
{
	  FLOAT ReturnValue;
};
// "event"	function whose parameters correspond to	"struct IIAmUsedByToolkit_eventOnUsingByToolkitInterrupted_Parms"	is declared	in "..\SwatGame\Classes\Equipment\IAmUsedByToolkit.uc"
struct IIAmUsedByToolkit_OnUsingByToolkitInterrupted_Parms
{
	  class APawn* User;
};
// "event"	function whose parameters correspond to	"struct IIAmUsedByToolkit_eventOnUsedByToolkit_Parms"	is declared	in "..\SwatGame\Classes\Equipment\IAmUsedByToolkit.uc"
struct IIAmUsedByToolkit_OnUsedByToolkit_Parms
{
	  class APawn* User;
};
// "event"	function whose parameters correspond to	"struct IIAmUsedByToolkit_eventOnUsingByToolkitBegan_Parms"	is declared	in "..\SwatGame\Classes\Equipment\IAmUsedByToolkit.uc"
struct IIAmUsedByToolkit_OnUsingByToolkitBegan_Parms
{
	  class APawn* User;
};
// "event"	function whose parameters correspond to	"struct IIAmUsedByToolkit_eventCanBeUsedByToolkitNow_Parms"	is declared	in "..\SwatGame\Classes\Equipment\IAmUsedByToolkit.uc"
struct IIAmUsedByToolkit_CanBeUsedByToolkitNow_Parms
{
	  BITFIELD ReturnValue;
};

// "event"	function whose parameters correspond to	"struct IICanBeDisabled_eventisActive_Parms"	is declared	in "..\SwatGame\Classes\ICanBeDisabled.uc"
struct IICanBeDisabled_isActive_Parms
{
	  BITFIELD ReturnValue;
};














// "event"	function whose parameters correspond to	"struct USwatRepo_eventNetworkHostLoading_Parms"	is declared	in "..\SwatGame\Classes\SwatRepo.uc"
struct USwatRepo_eventNetworkHostLoading_Parms
{
};
// "event"	function whose parameters correspond to	"struct USwatRepo_eventNetworkClientLoading_Parms"	is declared	in "..\SwatGame\Classes\SwatRepo.uc"
struct USwatRepo_eventNetworkClientLoading_Parms
{
};
// "event"	function whose parameters correspond to	"struct USwatRepo_eventPostPlayerLogin_Parms"	is declared	in "..\SwatGame\Classes\SwatRepo.uc"
struct USwatRepo_eventPostPlayerLogin_Parms
{
	  class ASwatPlayerController* thePC;
	  BYTE CurrentGameMode;
};

// Enum eSwatGameRole is declared in "..\SwatGame\Classes\SwatGUIConfig.uc"
enum eSwatGameRole
{
	 GAMEROLE_None           =0,
	 GAMEROLE_SP_Campaign    =1,
	 GAMEROLE_SP_Custom      =2,
	 GAMEROLE_SP_Other       =3,
	 GAMEROLE_MP_Host        =4,
	 GAMEROLE_MP_Client      =5,
	 GAMEROLE_MAX            =6,
};
// Enum eSwatGameState is declared in "..\SwatGame\Classes\SwatGUIConfig.uc"
enum eSwatGameState
{
	 GAMESTATE_None          =0,
	 GAMESTATE_EntryLoading  =1,
	 GAMESTATE_LevelLoading  =2,
	 GAMESTATE_PreGame       =3,
	 GAMESTATE_MidGame       =4,
	 GAMESTATE_PostGame      =5,
	 GAMESTATE_ClientTravel  =6,
	 GAMESTATE_ConnectionFailed=7,
	 GAMESTATE_MAX           =8,
};
// Enum eConnectionType is declared in "..\SwatGame\Classes\SwatGUIConfig.uc"
enum eConnectionType
{
	 CONNECTION_Modem        =0,
	 CONNECTION_Cable        =1,
	 CONNECTION_DSL          =2,
	 CONNECTION_T1           =3,
	 CONNECTION_T3           =4,
	 CONNECTION_OC3          =5,
	 CONNECTION_MAX          =6,
};
// Enum ECommandInterfaceStyle is declared in "..\SwatGame\Classes\SwatGUIConfig.uc"
enum ECommandInterfaceStyle
{
	 CommandInterface_Invalid=0,
	 CommandInterface_Classic=1,
	 CommandInterface_Graphic=2,
	 CommandInterface_MAX    =3,
};
// Enum eExtraInts is declared in "..\SwatGame\Classes\SwatGUIConfig.uc"
enum eExtraInts
{
	 ExtraInt_IronsightsDisabled=0,
	 ExtraInt_ViewmodelDisabled=1,
	 ExtraInt_CrosshairDisabled=2,
	 ExtraInt_InertiaDisabled=3,
	 ExtraInt_ZoomDisabled   =4,
	 ExtraInt_ImperialMeasurements=5,
	 ExtraInt_MAX            =6,
};
// Enum eExtraStrings is declared in "..\SwatGame\Classes\SwatGUIConfig.uc"
enum eExtraStrings
{
	 ExtraStr_Dummy          =0,
	 ExtraStr_MAX            =1,
};
// Enum eVoiceType is declared in "..\SwatGame\Classes\SwatGUIConfig.uc"
enum eVoiceType
{
	 VOICETYPE_Random        =0,
	 VOICETYPE_Lead          =1,
	 VOICETYPE_OfficerRedOne =2,
	 VOICETYPE_OfficerRedTwo =3,
	 VOICETYPE_OfficerBlueOne=4,
	 VOICETYPE_OfficerBlueTwo=5,
	 VOICETYPE_VIP           =6,
	 VOICETYPE_MAX           =7,
};
// Enum eFloatOptions is declared in "..\SwatGame\Classes\SwatGUIConfig.uc"
enum eFloatOptions
{
	 ExtraFloat_SuspectSpawnModifier=0,
	 ExtraFloat_HostageSpawnModifier=1,
	 ExtraFloat_MAX          =2,
};
// Enum eCommandCategory is declared in "..\SwatGame\Classes\SwatGUIConfig.uc"
enum eCommandCategory
{
	 COMCAT_Movement         =0,
	 COMCAT_Interactions     =1,
	 COMCAT_Chat             =2,
	 COMCAT_Multiplayer      =3,
	 COMCAT_Reserved         =4,
	 COMCAT_MAX              =5,
};
// Enum eTeamValidity is declared in "..\SwatGame\Classes\SwatGUIConfig.uc"
enum eTeamValidity
{
	 TEAMVALID_All           =0,
	 TEAMVALID_SWATOnly      =1,
	 TEAMVALID_SuspectsOnly  =2,
	 TEAMVALID_MAX           =3,
};
// Enum eNetworkValidity is declared in "..\SwatGame\Classes\SwatGUIConfig.uc"
enum eNetworkValidity
{
	 NETVALID_None           =0,
	 NETVALID_SPOnly         =1,
	 NETVALID_MPOnly         =2,
	 NETVALID_All            =3,
	 NETVALID_MAX            =4,
};
// Enum eDifficultyLevel is declared in "..\SwatGame\Classes\SwatGUIConfig.uc"
enum eDifficultyLevel
{
	 DIFFICULTY_Easy         =0,
	 DIFFICULTY_Normal       =1,
	 DIFFICULTY_Hard         =2,
	 DIFFICULTY_Elite        =3,
	 DIFFICULTY_MAX          =4,
};
// Struct FServerFilters	is declared	in "..\SwatGame\Classes\SwatGUIConfig.uc"
struct SWATGAME_API FServerFilters
{
    INT MaxPing;
    BITFIELD bFull:1;
    BITFIELD bEmpty:1;
    BITFIELD bPassworded:1;
    BITFIELD bFilterGametype:1;
    BYTE GameType;
    BITFIELD bFilterMapName:1;
    FStringNoInit MapName;
    BITFIELD bHideIncompatibleVersions:1;
    BITFIELD bHideIncompatibleMods:1;
};


// Class	ADoorBufferVolume is declared in "..\SwatGame\Classes\Doors\DoorBufferVolume.uc"
class SWATGAME_API	ADoorBufferVolume	: public AVolume
{
public:
    class ASwatDoor* AssociatedDoor;
    TArrayNoInit<class ASwatPlayer*> PlayersToRepulse;
	   DECLARE_CLASS(ADoorBufferVolume,AVolume,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(ADoorBufferVolume)
};

// Class	AVisionBlockingVolume is declared in "..\SwatGame\Classes\AI\VisionBlockingVolume.uc"
class SWATGAME_API	AVisionBlockingVolume	: public AVolume
{
public:
	   DECLARE_CLASS(AVisionBlockingVolume,AVolume,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(AVisionBlockingVolume)
};

// Class	ACommandArrow is declared in "..\SwatGame\Classes\PlayerInteraction\CommandArrow.uc"
class SWATGAME_API	ACommandArrow	: public AActor
{
public:
    FLOAT PointOffset;
    FLOAT OverheadOffset;
    FVector NativeOffset;
    BITFIELD bNativeUpdatePosition:1;
    class AActor* Source;
    class AActor* Target;
	   DECLARE_CLASS(ACommandArrow,AActor,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(ACommandArrow)
};

// Class	ASwatAIController is declared in "..\SwatGame\Classes\AI\SwatAIController.uc"
class SWATGAME_API	ASwatAIController	: public AAI_Controller
{
public:
	   DECLARE_CLASS(ASwatAIController,AAI_Controller,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(ASwatAIController)
};

// Class	ASwatPlayerController is declared in "..\SwatGame\Classes\SwatPlayerController.uc"
class SWATGAME_API	ASwatPlayerController	: public APlayerController
{
public:
    FLOAT FlashScale;
    FVector FlashFog;
    BITFIELD ShouldDisplayPRIIds:1;
    INT VOIPIgnoreStaticArray[16];
	   DECLARE_FUNCTION(execShouldAutoJoinOnStartUp);
	   DECLARE_CLASS(ASwatPlayerController,APlayerController,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(ASwatPlayerController)
};

// Class	ASwatGamePlayerController is declared in "..\SwatGame\Classes\SwatGamePlayerController.uc"
class SWATGAME_API	ASwatGamePlayerController	: public ASwatPlayerController
{
public:
    INT FlashbangRetinaImageTextureWidth;
    INT FlashbangRetinaImageTextureHeight;
    class UFlashbangCameraEffect* FlashbangCameraEffect;
    class UCSGasCameraEffect* CSGasCameraEffect;
    class UStingCameraEffect* StingCameraEffect;
    class UPepperSprayCameraEffect* PepperSprayCameraEffect;
    class UNVGogglesCameraEffect* NVGogglesCameraEffect;
    class ASwatPlayer* SwatPlayer;
    BITFIELD bIsKillerLocationValid:1;
    FVector KillerLocation;
    BITFIELD bShouldStartDeathCam:1;
    BITFIELD bIsDeathCamRunning:1;
    FLOAT DeathCamStartTimeSeconds;
    FRotator DeathCamStartRotation;
    FRotator DeathCamEndRotation;
    FLOAT DeathCamStartDistance;
    FLOAT DeathCamEndDistance;
    class ATimer* ForceObserverTimer;
    FLOAT ForceObserverTime;
    class ATimer* ComplianceTimer;
    FLOAT ComplianceTime;
    class ATimer* CommandTimer;
    FLOAT CommandTime;
    FLOAT EndGameCamYaw;
    FLOAT EndGameCamLastDist;
    FLOAT EndGameCamYawLastUpdateTime;
    FLOAT LastMouseX;
    FLOAT LastMouseY;
    FLOAT MouseDistancePerSecond;
    BITFIELD Recoiling:1;
    FLOAT RecoilStartTime;
    FLOAT RecoilBackDuration;
    FLOAT RecoilForeDuration;
    FLOAT RecoilMagnitude;
    FLOAT LastRecoilFunctionValue;
    BITFIELD DebugShouldRecoil:1;
    BITFIELD SpecialInteractionsDisabled:1;
    FLOAT FocusTestDistance;
    FLOAT FocusTestInterval;
    class ATimer* FocusPollTimer;
    FName LastFocusSource;
    TArrayNoInit<FPlayerFocusInterfaceInfo> FocusInterfaceInfos;
    TArrayNoInit<class APlayerFocusInterface*> FocusInterfaces;
    class ACommandInterface* CurrentCommandInterface;
    class UHUDPageBase* HUDPage;
    class UMaterial* ZoomBlurFader;
    class USwatRepo* Repo;
    class APawn* ReplicatedObserverCamTarget;
    class AExternalViewportManager* ViewportManager;
    class IIControllableThroughViewport* ReplicatedViewportTeammate;
    class ATimer* SniperAlertTimer;
    FLOAT SniperAlertTime;
    FStringNoInit SniperAlertFilter;
    BYTE bControlViewport;
    FVector FocusTraceOrigin;
    FVector FocusTraceVector;
    BYTE LastMovingMode;
    BYTE bReload;
    FVector LastDebugPoint;
    BITFIELD bAuditFocus:1;
    class AOfficerLoadOut* theLoadOut;
    INT SwatPlayerID;
    class USwatRepoPlayerItem* SwatRepoPlayerItem;
    BITFIELD ThisPlayerIsTheVIP:1;
    BITFIELD HaveCalledInterruptYet:1;
    BITFIELD SPBombExploded:1;
    BITFIELD LastBehindView:1;
    class ABattleRoomManager* BattleRoomManager;
    FLOAT BattleRoomZ;
    INT BattleRoomPitch;
    BYTE bBattleRoomRotation;
    BYTE bBattleRoomControl;
    class AActor* OtherForQualifyingUse;
    BYTE EquipmentSlotForQualify;
    BITFIELD bPlayerIsCuffed:1;
    FLOAT BeingCuffedTimeout;
    BITFIELD DebugLocationFrozen:1;
    BITFIELD bAlwaysRun:1;
    BITFIELD bChangingTeams:1;
    BITFIELD bHaveAlreadyInterruptedOptiwand:1;
    FVector LastFocusUpdateOrigin;
    FName TeamSelectedBeforeControllingOfficerViewport;
    BYTE VoiceType;
	   DECLARE_FUNCTION(execIsNetRelevant);
	   DECLARE_FUNCTION(execFlagForPrecache);
	   DECLARE_FUNCTION(execGetLookAroundSpeed);
	  void	eventOnReplicatedObserverCamTargetChanged()
	  {
		   ProcessEvent(FindFunctionChecked(SWATGAME_OnReplicatedObserverCamTargetChanged),NULL);
	  }
	  void	eventActivateViewport(class IIControllableViewport* inNewViewport)
	  {
        ASwatGamePlayerController_eventActivateViewport_Parms Parms;
		   Parms.inNewViewport=inNewViewport;
        ProcessEvent(FindFunctionChecked(SWATGAME_ActivateViewport),&Parms);
	  }
	  void	eventOnReplicatedViewportTeammateChanged()
	  {
		   ProcessEvent(FindFunctionChecked(SWATGAME_OnReplicatedViewportTeammateChanged),NULL);
	  }
	  void	eventInitiateViewportUse(class IIControllableViewport* inNewViewport)
	  {
        ASwatGamePlayerController_eventInitiateViewportUse_Parms Parms;
		   Parms.inNewViewport=inNewViewport;
        ProcessEvent(FindFunctionChecked(SWATGAME_InitiateViewportUse),&Parms);
	  }
	   DECLARE_CLASS(ASwatGamePlayerController,ASwatPlayerController,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(ASwatGamePlayerController)
};

// Class	AConversationManager is declared in "..\SwatGame\Classes\Conversation\ConversationManager.uc"
class SWATGAME_API	AConversationManager	: public AActor
{
public:
    FLOAT DefaultInterLineDelay;
    TArrayNoInit<class UConversation*> ActiveConversations;
	   DECLARE_CLASS(AConversationManager,AActor,0|CLASS_Config,SwatGame)
    UBOOL Tick(FLOAT DeltaSeconds, enum ELevelTick TickType);
};

// Class	ADoorWay is declared in "..\SwatGame\Classes\Doors\DoorWay.uc"
class SWATGAME_API	ADoorWay	: public AActor
{
public:
	  class ASwatDoor*	eventGetDoor()
	  {
        ADoorWay_eventGetDoor_Parms Parms;
		   Parms.ReturnValue=0;
        ProcessEvent(FindFunctionChecked(SWATGAME_GetDoor),&Parms);
		   return Parms.ReturnValue;
	  }
	   DECLARE_CLASS(ADoorWay,AActor,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(ADoorWay)
};

// Class	ASimpleEquipment is declared in "..\SwatGame\Classes\Equipment\SimpleEquipment.uc"
class SWATGAME_API	ASimpleEquipment	: public AEquipment
{
public:
    FName AttachmentBone;
    BITFIELD AutoEquip:1;
	   DECLARE_CLASS(ASimpleEquipment,AEquipment,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(ASimpleEquipment)
};

// Class	AGameMode is declared in "..\SwatGame\Classes\GameModes\GameMode.uc"
class SWATGAME_API	AGameMode	: public AActor
{
public:
    class ASwatGameInfo* SGI;
	   DECLARE_CLASS(AGameMode,AActor,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(AGameMode)
};

// Class	AGameModeMPBase is declared in "..\SwatGame\Classes\GameModes\GameModeMPBase.uc"
class SWATGAME_API	AGameModeMPBase	: public AGameMode
{
public:
    BITFIELD bIsRespawningEnabled:1;
    class ANetTeam* Teams[2];
    class ASwatMPStartCluster* CurrentStartCluster[2];
    INT HighestPointUsed[2];
    TArrayNoInit<class ASwatMPStartCluster*> Team0StartClusters;
    TArrayNoInit<class ASwatMPStartCluster*> Team1StartClusters;
    INT DefaultRespawnSecondsRemaining;
    INT respawnSecondsRemaining[2];
    class AActor* InterestingViewTarget;
    class ATimer* EndRoundSequenceTimer;
    BITFIELD NotifiedOneMinuteWarning:1;
    BITFIELD NotifiedTenSecondsWarning:1;
	   DECLARE_FUNCTION(execCalculateClusterDistanceFromPawn);
	   DECLARE_CLASS(AGameModeMPBase,AGameMode,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(AGameModeMPBase)
};

// Class	ASwatHUD is declared in "..\SwatGame\Classes\SwatHUD.uc"
class SWATGAME_API	ASwatHUD	: public AHUD
{
public:
    FLOAT CommandPositionX;
    FLOAT CommandPositionY;
    INT CommandTextureSizeX;
    INT CommandTextureSizeY;
    FLOAT ScaleX;
    FLOAT ScaleY;
    BITFIELD bShowFocusDebug:1;
    class UTexture* CommandClearTexture;
    class UTexture* CommandFallInTexture;
    class UTexture* CommandStackUpTexture;
    class UTexture* CommandComplyTexture;
    BITFIELD bShowVisionCones:1;
    BITFIELD bShowAIMovementDebugInfo:1;
    BITFIELD bShowOfficerAIAssignmentsInfo:1;
    BITFIELD bShowCoverInfo:1;
    class APawn* ShowCoverInfoPawn;
    BYTE ShowCoverInfoDetail;
    BITFIELD bShowAwarenessInfo:1;
    class UAwarenessProxy* Awareness;
    TArrayNoInit<FDebugLine> DebugLines;
    TArrayNoInit<FDebugCone> DebugCones;
    FLOAT LastTimeDebugShapesDrawn;
	   DECLARE_FUNCTION(execDrawDebugCover);
	   DECLARE_CLASS(ASwatHUD,AHUD,0|CLASS_Transient|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(ASwatHUD)
};

// Class	ADeployedWedgeBase is declared in "..\SwatGame\Classes\Doors\DeployedWedgeBase.uc"
class SWATGAME_API	ADeployedWedgeBase	: public ADeployedTacticalAid
{
public:
    class UStaticMesh* PreviewStaticMesh;
    FLOAT QualifyTimeForToolkit;
    class ASwatDoor* AssociatedDoor;
	   DECLARE_CLASS(ADeployedWedgeBase,ADeployedTacticalAid,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(ADeployedWedgeBase)
};

// Class	ASwatGameInfo is declared in "..\SwatGame\Classes\SwatGameInfo.uc"
class SWATGAME_API	ASwatGameInfo	: public AGameInfo
{
public:
    TArrayNoInit<class UMesh*> PrecacheMeshes;
    TArrayNoInit<class UStaticMesh*> PrecacheStaticMeshes;
    TArrayNoInit<class UMaterial*> PrecacheMaterials;
    BITFIELD LevelHasFemaleCharacters:1;
    BITFIELD bDebugFrames:1;
    TArrayNoInit<class UDebugFrameData*> DebugFrameData;
    class UDebugFrameData* CurrentDebugFrameData;
    class USpawningManager* SpawningManager;
    class USwatRepo* Repo;
    class UGameEventsContainer* GameEvents;
    class ATimer* ObjectiveTimer;
    class ANavigationPoint* LastPlayerStartSpot;
    class ANavigationPoint* LastStartSpot;
    TArrayNoInit<class APlayerStart*> PlayerStartArray;
    INT NextPlayerStartPoint;
    class AGameMode* GameMode;
    INT PreviousNetRoundTimeRemaining;
    FLOAT SPDamageModifierEasy;
    FLOAT SPDamageModifierNormal;
    FLOAT SPDamageModifierHard;
    FLOAT SPDamageModifierElite;
    FLOAT MPDamageModifier;
    FLOAT COOPDamageModifier;
    INT NumSpawnedOfficers;
    BITFIELD DebugObjectives:1;
    BITFIELD DebugLeadership:1;
    BITFIELD DebugLeadershipStatus:1;
    BITFIELD DebugSpawning:1;
    BITFIELD bAlreadyCompleted:1;
    BITFIELD bAlreadyFailed:1;
    BITFIELD bAlreadyEnded:1;
    FLOAT ScoringUpdateInterval;
    class ATimer* ScoringUpdateTimer;
    class ATimer* ReconnectionTimer;
    FLOAT ReconnectionTime;
    BITFIELD bStatsNewGameStarted:1;
    FStringNoInit DefaultVoiceChannel;
    BITFIELD bAllowPrivateChat:1;
    FStringNoInit VoiceReplicationInfoType;
    class ASwatAdmin* Admin;
    FStringNoInit MPStatsClass;
    class UStatsInterface* ServerStats;
    FScriptDelegate __MissionObjectiveTimeExpired__Delegate;
	  void	delegateMissionObjectiveTimeExpired()
	  {
		   ProcessDelegate(SWATGAME_MissionObjectiveTimeExpired,&__MissionObjectiveTimeExpired__Delegate,NULL);
	  }
	   DECLARE_CLASS(ASwatGameInfo,AGameInfo,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(ASwatGameInfo)
};

// Class	ADynamicLight is declared in "..\SwatGame\Classes\Rendering\DynamicLight.uc"
class SWATGAME_API	ADynamicLight	: public ALight
{
public:
	   DECLARE_CLASS(ADynamicLight,ALight,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(ADynamicLight)
};

// Class	ALoadOutValidationBase is declared in "..\SwatGame\Classes\LoadOut\LoadOutValidationBase.uc"
class SWATGAME_API	ALoadOutValidationBase	: public AActor
{
public:
    class UClass* LoadOutSpec[27];
    class UMaterial* MaterialSpec[7];
    FStringNoInit CustomSkinSpec;
	   DECLARE_CLASS(ALoadOutValidationBase,AActor,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(ALoadOutValidationBase)
};

// Class	ALoadOut is declared in "..\SwatGame\Classes\LoadOut\LoadOut.uc"
class SWATGAME_API	ALoadOut	: public ALoadOutValidationBase
{
public:
    class AActor* PocketEquipment[27];
    class USwatGUIConfig* GC;
	   DECLARE_CLASS(ALoadOut,ALoadOutValidationBase,0|CLASS_Config,SwatGame)
    UBOOL HasA(FName HandheldEquipmentName);
};

// Class	AOfficerLoadOut is declared in "..\SwatGame\Classes\LoadOut\OfficerLoadOut.uc"
class SWATGAME_API	AOfficerLoadOut	: public ALoadOut
{
public:
	   DECLARE_CLASS(AOfficerLoadOut,ALoadOut,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(AOfficerLoadOut)
};

// Class	AMirrorPoint is declared in "..\SwatGame\Classes\MirrorPoint.uc"
class SWATGAME_API	AMirrorPoint	: public AActor
{
public:
    BYTE MirrorDirection;
    BITFIELD bIsMirroringFromPointValid:1;
    FVector MirroringFromPoint;
    FVector MirroringToPoint;
    FRotator MirroringRotation;
    FLOAT OffsetFromMirrorPoint;
    FLOAT OffsetFromCornerDirection;
	   DECLARE_CLASS(AMirrorPoint,AActor,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(AMirrorPoint)
};

// Class	ASwatDoor is declared in "..\SwatGame\Classes\Doors\SwatDoor.uc"
class SWATGAME_API	ASwatDoor	: public ADoor
{
public:
    BITFIELD bIsMissionExit:1;
    BITFIELD bIsLocked:1;
    BITFIELD bCanBeLocked:1;
    BITFIELD bWasInitiallyLocked:1;
    BITFIELD bWasInitiallyOpen:1;
    BITFIELD bIsBroken:1;
    BITFIELD bIsAntiPortal:1;
    FVector AntiPortalScaleFactor;
    class AAntiPortalActor* DoorAntiPortal;
    BITFIELD bIsPushable:1;
    BITFIELD bPlayerCanUse:1;
    BITFIELD bIsBoobyTrapped:1;
    BITFIELD bBoobyTrapTripped:1;
    class ABoobyTrap* BoobyTrap;
    TArrayNoInit<FDoorAttachmentSpec> Attachments;
    class UStaticMesh* BrokenStaticMesh;
    BYTE InitialPosition;
    BYTE CurrentPosition;
    FLOAT QualifyTimeForToolkit;
    FLOAT QualifyTimeForWedge;
    FLOAT QualifyTimeForC2Charge;
    class ADoorWay* DoorWay;
    TArrayNoInit<class ALeftStackupPoint*> LeftStackupPoints;
    TArrayNoInit<class ARightStackupPoint*> RightStackupPoints;
    TArrayNoInit<class ALeftClearPoint*> LeftClearPoints;
    TArrayNoInit<class ARightClearPoint*> RightClearPoints;
    TArrayNoInit<class AStackupPoint*> AlternateLeftStackupPoints;
    TArrayNoInit<class AStackupPoint*> AlternateRightStackupPoints;
    class AAlternateStackupPoint* LeftAlternatePlacedStackupPoints[4];
    class AAlternateStackupPoint* RightAlternatePlacedStackupPoints[4];
    FLOAT LeftAdditionalGrenadeThrowDistance;
    FLOAT RightAdditionalGrenadeThrowDistance;
    FStringNoInit LeftRoomName;
    FStringNoInit RightRoomName;
    FName LeftInternalRoomName;
    FName RightInternalRoomName;
    class APawn* LastInteractor;
    class APawn* PendingInteractor;
    class APlacedThrowPoint* LeftPlacedThrowPoint;
    class APlacedThrowPoint* RightPlacedThrowPoint;
    FName LeftSideBackOpenPointBoneName;
    FName LeftSideFrontOpenPointBoneName;
    FName LeftSideCenterOpenPointBoneName;
    FName RightSideBackOpenPointBoneName;
    FName RightSideFrontOpenPointBoneName;
    FName RightSideCenterOpenPointBoneName;
    FName OpenLeftAwayClosePointBoneName;
    FName OpenLeftTowardsClosePointBoneName;
    FName OpenRightAwayClosePointBoneName;
    FName OpenRightTowardsClosePointBoneName;
    FName RightSideKnobBreachPointBoneName;
    FName RightSideHingeBreachPointBoneName;
    FName LeftSideKnobBreachPointBoneName;
    FName LeftSideHingeBreachPointBoneName;
    BITFIELD bLeftSideBackOpenPointUsable:1;
    BITFIELD bLeftSideFrontOpenPointUsable:1;
    BITFIELD bLeftSideCenterOpenPointUsable:1;
    BITFIELD bRightSideBackOpenPointUsable:1;
    BITFIELD bRightSideFrontOpenPointUsable:1;
    BITFIELD bRightSideCenterOpenPointUsable:1;
    BITFIELD bRightSideKnobBreachPointUsable:1;
    BITFIELD bRightSideHingeBreachPointUsable:1;
    BITFIELD bLeftSideKnobBreachPointUsable:1;
    BITFIELD bLeftSideHingeBreachPointUsable:1;
    FVector LeftSideBackOpenPoint;
    FVector LeftSideFrontOpenPoint;
    FVector LeftSideCenterOpenPoint;
    FVector RightSideBackOpenPoint;
    FVector RightSideFrontOpenPoint;
    FVector RightSideCenterOpenPoint;
    FVector RightSideKnobBreachPoint;
    FVector RightSideHingeBreachPoint;
    FVector LeftSideKnobBreachPoint;
    FVector LeftSideHingeBreachPoint;
    FVector OpenLeftAwayClosePoint;
    FVector OpenLeftTowardsClosePoint;
    FVector OpenRightAwayClosePoint;
    FVector OpenRightTowardsClosePoint;
    FName LeftSideBackKnobOpenAnimation;
    FName LeftSideFrontKnobOpenAnimation;
    FName LeftSideCenterKnobOpenAnimation;
    FName LeftSideBackPushOpenAnimation;
    FName LeftSideFrontPushOpenAnimation;
    FName LeftSideCenterPushOpenAnimation;
    FName RightSideBackKnobOpenAnimation;
    FName RightSideFrontKnobOpenAnimation;
    FName RightSideCenterKnobOpenAnimation;
    FName RightSideBackPushOpenAnimation;
    FName RightSideFrontPushOpenAnimation;
    FName RightSideCenterPushOpenAnimation;
    FName LeftSideBackKnobTryAnimation;
    FName LeftSideFrontKnobTryAnimation;
    FName LeftSideCenterKnobTryAnimation;
    FName LeftSideBackPushTryAnimation;
    FName LeftSideFrontPushTryAnimation;
    FName LeftSideCenterPushTryAnimation;
    FName RightSideBackKnobTryAnimation;
    FName RightSideFrontKnobTryAnimation;
    FName RightSideCenterKnobTryAnimation;
    FName RightSideBackPushTryAnimation;
    FName RightSideFrontPushTryAnimation;
    FName RightSideCenterPushTryAnimation;
    FName LeftSideCenterFranticKnobOpenAnimation;
    FName RightSideCenterFranticKnobOpenAnimation;
    FName LeftSideCenterFranticPushOpenAnimation;
    FName RightSideCenterFranticPushOpenAnimation;
    FName OLBackTowardsKnobCloseAnimation;
    FName OLBackTowardsPushCloseAnimation;
    FName OLFrontTowardsKnobCloseAnimation;
    FName OLFrontTowardsPushCloseAnimation;
    FName OLFrontAwayKnobCloseAnimation;
    FName OLFrontAwayPushCloseAnimation;
    FName ORBackTowardsKnobCloseAnimation;
    FName ORBackTowardsPushCloseAnimation;
    FName ORFrontTowardsKnobCloseAnimation;
    FName ORFrontTowardsPushCloseAnimation;
    FName ORFrontAwayKnobCloseAnimation;
    FName ORFrontAwayPushCloseAnimation;
    FLOAT MoveAndClearPauseThreshold;
    class ADoorBufferVolume* DoorBufferVolume;
    class UStaticMesh* DoorBufferVolumeCollisionMesh;
    BITFIELD bLockedBySwat:1;
    BITFIELD bUnused1:1;
    BITFIELD bUnused2:1;
    BITFIELD bUnused3:1;
    BITFIELD bUnused4:1;
    BITFIELD bUnused5:1;
    BITFIELD bUnused6:1;
    BITFIELD bUnused7:1;
    BITFIELD bUnused8:1;
    BITFIELD bUnused9:1;
    BITFIELD bUnused10:1;
    BITFIELD bUnused11:1;
    BITFIELD bUnused12:1;
    BITFIELD bUnused13:1;
    BITFIELD bUnused14:1;
    BITFIELD bUnused15:1;
    BITFIELD bUnused16:1;
    BITFIELD bUnused17:1;
    BITFIELD bUnused18:1;
    BITFIELD bUnused19:1;
    BITFIELD bUnused20:1;
    BITFIELD bUnused21:1;
    BITFIELD bUnused22:1;
    BITFIELD bUnused23:1;
    BITFIELD bUnused24:1;
    BITFIELD bUnused25:1;
    BITFIELD bUnused26:1;
    BITFIELD bUnused27:1;
    BITFIELD bUnused28:1;
    BITFIELD bUnused29:1;
    BITFIELD bUnused30:1;
    BITFIELD bUnused31:1;
    BITFIELD bUnused32:1;
    class AActor* UnusedActor;
    class UClass* DeployedWedgeClass;
    FStringNoInit DeployedC2ChargeClassName;
    class UClass* DeployedC2ChargeClass;
    class ADeployedWedgeBase* DeployedWedge;
    class ADeployedC2ChargeBase* DeployedC2ChargeLeft;
    class ADeployedC2ChargeBase* DeployedC2ChargeRight;
    BYTE AcceptsCommandsFrom;
    BYTE ExternalFacingSide;
    BYTE PreviousAcceptsCommandsFrom;
    TArrayNoInit<class IIInterestedInDoorOpening*> InterestedInDoorOpeningRegistrants;
    TArrayNoInit<class APawn*> BlockingPawns;
    INT LockedKnowledge[3];
    BYTE ReasonForMove;
    INT RemainingUpdateAttachmentLocationsCounter;
	   DECLARE_FUNCTION(execGetSkeletalRegionCenter);
	   DECLARE_FUNCTION(execGetRightRoomName);
	   DECLARE_FUNCTION(execGetLeftRoomName);
	   DECLARE_FUNCTION(execPointIsToMyLeft);
	  BITFIELD	eventIsC2ChargeOnPlayersSide()
	  {
        ASwatDoor_eventIsC2ChargeOnPlayersSide_Parms Parms;
		   Parms.ReturnValue=0;
        ProcessEvent(FindFunctionChecked(SWATGAME_IsC2ChargeOnPlayersSide),&Parms);
		   return Parms.ReturnValue;
	  }
	  BITFIELD	eventPawnBelievesDoorLocked(class ASwatPawn* Pawn)
	  {
        ASwatDoor_eventPawnBelievesDoorLocked_Parms Parms;
		   Parms.ReturnValue=0;
		   Parms.Pawn=Pawn;
        ProcessEvent(FindFunctionChecked(SWATGAME_PawnBelievesDoorLocked),&Parms);
		   return Parms.ReturnValue;
	  }
	  BITFIELD	eventPlayerIsOnExternalSide()
	  {
        ASwatDoor_eventPlayerIsOnExternalSide_Parms Parms;
		   Parms.ReturnValue=0;
        ProcessEvent(FindFunctionChecked(SWATGAME_PlayerIsOnExternalSide),&Parms);
		   return Parms.ReturnValue;
	  }
	  BITFIELD	eventPointIsOnExternalSide(FVector Point)
	  {
        ASwatDoor_eventPointIsOnExternalSide_Parms Parms;
		   Parms.ReturnValue=0;
		   Parms.Point=Point;
        ProcessEvent(FindFunctionChecked(SWATGAME_PointIsOnExternalSide),&Parms);
		   return Parms.ReturnValue;
	  }
	  BITFIELD	eventLocalPlayerIsToMyLeft()
	  {
        ASwatDoor_eventLocalPlayerIsToMyLeft_Parms Parms;
		   Parms.ReturnValue=0;
        ProcessEvent(FindFunctionChecked(SWATGAME_LocalPlayerIsToMyLeft),&Parms);
		   return Parms.ReturnValue;
	  }
	   DECLARE_CLASS(ASwatDoor,ADoor,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(ASwatDoor)
};

// Class	ADoubleDoor is declared in "..\SwatGame\Classes\Doors\DoubleDoor.uc"
class SWATGAME_API	ADoubleDoor	: public ASwatDoor
{
public:
    class UStaticMesh* OneOfDoubleDoorsSM;
    class ADoorModel* LeftHingeDoorModel;
    class ADoorModel* RightHingeDoorModel;
	   DECLARE_CLASS(ADoubleDoor,ASwatDoor,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(ADoubleDoor)
};

// Class	ASingleDoor is declared in "..\SwatGame\Classes\Doors\SingleDoor.uc"
class SWATGAME_API	ASingleDoor	: public ASwatDoor
{
public:
    BITFIELD bNoDoor:1;
    class ADoorModel* DoorModel;
	   DECLARE_CLASS(ASingleDoor,ASwatDoor,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(ASingleDoor)
};

// Class	ASwatStartPointBase is declared in "..\SwatGame\Classes\SwatStartPointBase.uc"
class SWATGAME_API	ASwatStartPointBase	: public APlayerStart
{
public:
    BYTE EntryType;
	   DECLARE_CLASS(ASwatStartPointBase,APlayerStart,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(ASwatStartPointBase)
};

// Class	ASwatOfficerStart is declared in "..\SwatGame\Classes\AI\SwatOfficerStart.uc"
class SWATGAME_API	ASwatOfficerStart	: public ASwatStartPointBase
{
public:
    BYTE OfficerStartType;
    class UTexture* OfficerStartPointIcons[4];
    BITFIELD bOfficerStartCheckedForNumberErrors:1;
	   DECLARE_CLASS(ASwatOfficerStart,ASwatStartPointBase,0|CLASS_Config,SwatGame)
	virtual void PostEditChange();
	virtual void PostEditLoad();
	void UpdateIcon();
	virtual void CheckForErrors();
	void CheckNumberOfSwatOfficerStarts();
};

// Class	ASwatPlayerStart is declared in "..\SwatGame\Classes\SwatPlayerStart.uc"
class SWATGAME_API	ASwatPlayerStart	: public ASwatStartPointBase
{
public:
	   DECLARE_CLASS(ASwatPlayerStart,ASwatStartPointBase,0|CLASS_Config,SwatGame)
	virtual void CheckForErrors();
	void CheckNumberOfSwatPlayerStarts();
};

// Class	ASwatPawn is declared in "..\SwatGame\Classes\SwatPawn.uc"
class SWATGAME_API	ASwatPawn	: public APawn
{
public:
    class UAnimationSet* AnimSet;
    FName AnimBoneBase;
    FName AnimBoneSpineLow;
    FName AnimBoneRightShoulder;
    FName AnimBoneHead;
    FName AnimBoneJaw;
    FName NormalAimLocationBone;
    FName LeanAimLocationBone;
    FName NormalFireLocationBone;
    FName LeanFireLocationBone;
    FName AnimSocketGripRhand;
    FName AnimSocketGripBack;
    FName AnimSocketGripHolster;
    FName AnimSocketGripBelt1;
    FName AnimSocketGripBelt2;
    FName AnimSocketHolster;
    FName AnimSocketPouch;
    FName AnimSocketHeadGear;
    TArrayNoInit<FString> MaleAnimGroups;
    TArrayNoInit<FString> FemaleAnimGroups;
    FLOAT PercentageHealthForIntenseInjury;
    INT AnimFlags[5];
    BITFIELD bWasSpecialChannelAnimatingLastFrame:1;
    BITFIELD bWasEquipmentChannelAnimatingLastFrame:1;
    FLOAT AnimSpecialAlphaOverride;
    BITFIELD bIsAnimSpecialAlphaOverrideEnabled:1;
    FLOAT AnimEquipmentAlphaOverride;
    BITFIELD bIsAnimEquipmentAlphaOverrideEnabled:1;
    FLOAT AnimBaseYaw;
    FLOAT AnimBaseTurnToYaw;
    BITFIELD bIsAnimBaseTurnToYawValid:1;
    BYTE AnimRotationUrgency;
    BYTE AnimAimRotationUrgency;
    BITFIELD bIsTurning:1;
    FLOAT AverageSpeedSamples[5];
    INT AverageSpeedSampleIndex;
    INT LastSpeedSampleTick;
    FLOAT AimBlendChangeTime;
    FLOAT InertialAimAcceleration;
    FLOAT InertialAimDeceleration;
    FLOAT InertialAimMaxVelocity;
    FLOAT InertialAimPositionPitch;
    FLOAT InertialAimPositionYaw;
    FLOAT InertialAimVelocityPitch;
    FLOAT InertialAimVelocityYaw;
    BITFIELD bIsMouthMoving:1;
    class UPerlinNoise* MouthMovementPerlinNoise;
    BYTE AnimAimType;
    FRotator AnimAimRotator;
    FVector AnimAimPoint;
    class AActor* AnimAimActor;
    BYTE AnimLeanState;
    BITFIELD bAnimDrawDebugLines:1;
    TMap<FName,class UPawnDoorKnowledge*> DoorKnowledgeMap;
    BITFIELD FlashlightShouldBeOn:1;
    BITFIELD NightvisionShouldBeOn:1;
    BITFIELD bIsLowReady:1;
    FName ReasonForLowReady;
    BITFIELD bShouldBeAtLowReady:1;
    FName ReasonForShouldBeAtLowReady;
    BITFIELD bIsOnStairs:1;
    BITFIELD bGoingUpStairs:1;
    FVector LastLocation;
    BITFIELD bIsFlashbanged:1;
    BITFIELD bIsGassed:1;
    BITFIELD bIsPepperSprayed:1;
    BITFIELD bIsStung:1;
    BITFIELD bIsStunnedByC2:1;
    BITFIELD bIsTased:1;
    BITFIELD bIsWearingNightvision:1;
    FLOAT MaxComplianceIssueDistance;
    BITFIELD bArrested:1;
    BITFIELD BeingArrested:1;
    class APawn* ArrestedBy;
    FLOAT QualifyTimeForArrest;
    BITFIELD bWantsToContinueAutoFiring:1;
    FLOAT ShadowLightDistance;
    FLOAT ShadowExtraDrawScale;
    FLOAT MaxShadowTraceDistance;
    FLOAT ShadowCullDistance;
    FVector LeanPositionOffset;
    FRotator LeanRotationOffset;
    FLOAT LastLeanOffsetsUpdateTime;
    FLOAT LeanVerticalDistance;
    FLOAT LeanRollDegrees;
    FLOAT LeanBezierPt1X;
    FLOAT LeanBezierPt1Y;
    FLOAT LeanBezierPt2X;
    FLOAT LeanBezierPt2Y;
    class AController* CachedPlayerControllerForOptiwand;
    FLOAT RenderBoundingBoxExpansionSize;
    FRotator LastAimRotator;
    FLOAT HavokObjectInteractionFactor;
	   DECLARE_FUNCTION(execIsArrested);
	   DECLARE_FUNCTION(execDoesBelieveDoorWedged);
	   DECLARE_FUNCTION(execDoesBelieveDoorLocked);
	   DECLARE_FUNCTION(execGetDoorKnowledge);
	   DECLARE_FUNCTION(execSetRenderBoundingBoxExpansionSize);
	   DECLARE_FUNCTION(execAnimGetAimOrigin);
	   DECLARE_FUNCTION(execAnimSnapRotationToBase);
	   DECLARE_FUNCTION(execAnimSnapBaseToAim);
	   DECLARE_FUNCTION(execAnimAreAimingChannelsMuted);
	   DECLARE_FUNCTION(execAnimAreChannelsAtZeroAlpha);
	   DECLARE_FUNCTION(execAnimSetIdle);
	   DECLARE_FUNCTION(execAnimStopQuickHit);
	   DECLARE_FUNCTION(execAnimStopEquipment);
	   DECLARE_FUNCTION(execAnimStopSpecial);
	   DECLARE_FUNCTION(execAnimGetQuickHitChannel);
	   DECLARE_FUNCTION(execAnimGetEquipmentChannel);
	   DECLARE_FUNCTION(execAnimGetSpecialChannel);
	   DECLARE_FUNCTION(execAnimCanAimAtDesiredRotation);
	   DECLARE_FUNCTION(execAnimCanAimAtDesiredActor);
	   DECLARE_FUNCTION(execAnimCanAimAtDesiredPoint);
	   DECLARE_FUNCTION(execAnimIsAimedAtDesired);
	   DECLARE_FUNCTION(execAnimGetAimRotation);
	   DECLARE_FUNCTION(execSetThirdPersonLeanAnims);
	   DECLARE_FUNCTION(execAnimStopAimChannels);
	   DECLARE_FUNCTION(execIsLowerBodyInjured);
	   DECLARE_FUNCTION(execAnimSwapInSet_Native);
	   DECLARE_FUNCTION(execInitNativeAnimationSystemForPawn);
	  void	eventStopAllSounds()
	  {
		   ProcessEvent(FindFunctionChecked(SWATGAME_StopAllSounds),NULL);
	  }
	  void	eventNightvisionShouldBeOnChanged()
	  {
		   ProcessEvent(FindFunctionChecked(SWATGAME_NightvisionShouldBeOnChanged),NULL);
	  }
	  void	eventFlashlightShouldBeOnChanged()
	  {
		   ProcessEvent(FindFunctionChecked(SWATGAME_FlashlightShouldBeOnChanged),NULL);
	  }
	  BITFIELD	eventGetDesiredFlashlightState()
	  {
        ASwatPawn_eventGetDesiredFlashlightState_Parms Parms;
		   Parms.ReturnValue=0;
        ProcessEvent(FindFunctionChecked(SWATGAME_GetDesiredFlashlightState),&Parms);
		   return Parms.ReturnValue;
	  }
	  void	eventInitializeDoorKnowledge(class ADoor* inDoor, class UPawnDoorKnowledge* DoorKnowledge)
	  {
        ASwatPawn_eventInitializeDoorKnowledge_Parms Parms;
		   Parms.inDoor=inDoor;
		   Parms.DoorKnowledge=DoorKnowledge;
        ProcessEvent(FindFunctionChecked(SWATGAME_InitializeDoorKnowledge),&Parms);
	  }
	  class UPawnDoorKnowledge*	eventGetDoorKnowledge(class ADoor* inDoor)
	  {
        ASwatPawn_eventGetDoorKnowledge_Parms Parms;
		   Parms.ReturnValue=0;
		   Parms.inDoor=inDoor;
        ProcessEvent(FindFunctionChecked(SWATGAME_GetDoorKnowledge),&Parms);
		   return Parms.ReturnValue;
	  }
	  void	eventOnLowReadyStatusChanged()
	  {
		   ProcessEvent(FindFunctionChecked(SWATGAME_OnLowReadyStatusChanged),NULL);
	  }
	  void	eventOnArrestedStatusChanged()
	  {
		   ProcessEvent(FindFunctionChecked(SWATGAME_OnArrestedStatusChanged),NULL);
	  }
	  void	eventOnbIsTasedChanged()
	  {
		   ProcessEvent(FindFunctionChecked(SWATGAME_OnbIsTasedChanged),NULL);
	  }
	  void	eventOnNonlethalEffectChanged()
	  {
		   ProcessEvent(FindFunctionChecked(SWATGAME_OnNonlethalEffectChanged),NULL);
	  }
	   DECLARE_CLASS(ASwatPawn,APawn,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(ASwatPawn)
};

// Class	ASwatRagdollPawn is declared in "..\SwatGame\Classes\SwatRagdollPawn.uc"
class SWATGAME_API	ASwatRagdollPawn	: public ASwatPawn
{
public:
    BITFIELD bHasRagdolledLocally:1;
    BITFIELD bHasRagdolledOnServer:1;
    BITFIELD bShouldCheckHasRagdolledOnServer:1;
    FVector LocationAtRagdollStartOnServer;
    class ATimer* DeadPawnTearOffTimer;
    BITFIELD bClientsShouldCallPlayDying:1;
    BITFIELD bIsDisabledRagdoll:1;
    BITFIELD bRagdollDeathUsesImpactMomentum:1;
    BITFIELD bRagdollDeathPushesAwayFromDoor:1;
    FLOAT RagdollPushAwayFromDoorVelocityMagnitude;
    FLOAT RagdollSimulationTimeout;
    class ATimer* LimbTwitchTimer;
    FLOAT LimbTwitchTime;
    class ATimer* LimbIdleTimer;
    FLOAT LimbIdleTime;
    BITFIELD bLimbsAreIdle:1;
    BITFIELD bRagdollingOnReplication:1;
    FLOAT FirstRagdollRenderTime;
    TArrayNoInit<FTwitchingBoneInfo> TwitchInfos;
    FLOAT RenderTimeout;
    FLOAT InitialRagdollRenderTimeout;
    TArrayNoInit<FBoneDampingSetting> BoneLinearDamping;
    TArrayNoInit<FBoneDampingSetting> BoneAngularDamping;
	   DECLARE_FUNCTION(execStopTwitchingLimbs);
	   DECLARE_FUNCTION(execStartTwitchingLimbs);
	  void	eventDisableRagdoll(BITFIELD bKeepHavokPhysics)
	  {
        ASwatRagdollPawn_eventDisableRagdoll_Parms Parms;
		   Parms.bKeepHavokPhysics=bKeepHavokPhysics;
        ProcessEvent(FindFunctionChecked(SWATGAME_DisableRagdoll),&Parms);
	  }
	   DECLARE_CLASS(ASwatRagdollPawn,ASwatPawn,0|CLASS_Config,SwatGame)
    virtual UBOOL Tick( FLOAT DeltaTime, ELevelTick TickType );
	virtual void PostNetReceive();
};

// Class	ASwatAI is declared in "..\SwatGame\Classes\AI\SwatAI.uc"
class SWATGAME_API	ASwatAI	: public ASwatRagdollPawn
{
public:
    class UVisionNotifier* Vision;
    class UHearingNotifier* Hearing;
    BITFIELD bIsIncapacitated:1;
    BITFIELD bIsCompliant:1;
    FName EyeBoneName;
    INT EyeBoneIndex;
    FVector CurrentViewPoint;
    FRotator CurrentViewDirection;
    FLOAT LastViewUpdateTime;
    FName IdleCategory;
    FLOAT LastIdleUpdateTime;
    class UAIKnowledge* AIKnowledge;
    class UAICoverFinder* AICoverFinder;
    class ASwatDoor* PendingDoor;
    BITFIELD bShowBlackboardDebugInfo:1;
    BITFIELD bShowTyrionCharacterDebugInfo:1;
    BITFIELD bShowTyrionMovementDebugInfo:1;
    BITFIELD bShowTyrionWeaponDebugInfo:1;
    BITFIELD bShowTyrionHeadDebugInfo:1;
    BITFIELD bShowMoraleHistoryDebugInfo:1;
    BITFIELD bShowAimingDebugInfo:1;
    BITFIELD bVisionDisabled:1;
    BITFIELD bVisionDisabledPermanently:1;
    BITFIELD bHearingDisabled:1;
    BITFIELD bHearingDisabledPermanently:1;
    FLOAT PlayerBlockingPathStartTime;
    FLOAT PlayerBlockingPathTime;
    BITFIELD bAlwaysTestPathReachability:1;
    FLOAT PathReachabilityRenderedRecentlyDelta;
    TArrayNoInit<FUpperBodyAnimBehaviorEntry> UpperBodyAnimBehaviorEntries;
    TArrayNoInit<FName> FBStandingReactionAnimations;
    TArrayNoInit<FName> FBStandingNoWeaponReactionAnimations;
    TArrayNoInit<FName> FBCrouchingReactionAnimations;
    TArrayNoInit<FName> FBCrouchingNoWeaponReactionAnimations;
    TArrayNoInit<FName> FBCompliantReactionAnimations;
    TArrayNoInit<FName> FBRestrainedReactionAnimations;
    TArrayNoInit<FName> FBStandingAffectedAnimations;
    TArrayNoInit<FName> FBStandingNoWeaponAffectedAnimations;
    TArrayNoInit<FName> FBCrouchingAffectedAnimations;
    TArrayNoInit<FName> FBCrouchingNoWeaponAffectedAnimations;
    TArrayNoInit<FName> FBCompliantAffectedAnimations;
    TArrayNoInit<FName> FBRestrainedAffectedAnimations;
    TArrayNoInit<FName> FBStandingRecoveryAnimations;
    TArrayNoInit<FName> FBStandingNoWeaponRecoveryAnimations;
    TArrayNoInit<FName> FBCrouchingRecoveryAnimations;
    TArrayNoInit<FName> FBCrouchingNoWeaponRecoveryAnimations;
    TArrayNoInit<FName> FBCompliantRecoveryAnimations;
    TArrayNoInit<FName> FBRestrainedRecoveryAnimations;
    TArrayNoInit<FName> GasStandingReactionAnimations;
    TArrayNoInit<FName> GasStandingNoWeaponReactionAnimations;
    TArrayNoInit<FName> GasCrouchingReactionAnimations;
    TArrayNoInit<FName> GasCrouchingNoWeaponReactionAnimations;
    TArrayNoInit<FName> GasCompliantReactionAnimations;
    TArrayNoInit<FName> GasRestrainedReactionAnimations;
    TArrayNoInit<FName> GasStandingAffectedAnimations;
    TArrayNoInit<FName> GasStandingNoWeaponAffectedAnimations;
    TArrayNoInit<FName> GasCrouchingAffectedAnimations;
    TArrayNoInit<FName> GasCrouchingNoWeaponAffectedAnimations;
    TArrayNoInit<FName> GasCompliantAffectedAnimations;
    TArrayNoInit<FName> GasRestrainedAffectedAnimations;
    TArrayNoInit<FName> GasStandingRecoveryAnimations;
    TArrayNoInit<FName> GasStandingNoWeaponRecoveryAnimations;
    TArrayNoInit<FName> GasCrouchingRecoveryAnimations;
    TArrayNoInit<FName> GasCrouchingNoWeaponRecoveryAnimations;
    TArrayNoInit<FName> GasCompliantRecoveryAnimations;
    TArrayNoInit<FName> GasRestrainedRecoveryAnimations;
    TArrayNoInit<FName> TasedStandingReactionAnimations;
    TArrayNoInit<FName> TasedCrouchingReactionAnimations;
    TArrayNoInit<FName> TasedCompliantReactionAnimations;
    TArrayNoInit<FName> TasedRestrainedReactionAnimations;
    TArrayNoInit<FName> TasedStandingAffectedAnimations;
    TArrayNoInit<FName> TasedCrouchingAffectedAnimations;
    TArrayNoInit<FName> TasedCompliantAffectedAnimations;
    TArrayNoInit<FName> TasedRestrainedAffectedAnimations;
    TArrayNoInit<FName> TasedStandingRecoveryAnimations;
    TArrayNoInit<FName> TasedCrouchingRecoveryAnimations;
    TArrayNoInit<FName> TasedCompliantRecoveryAnimations;
    TArrayNoInit<FName> TasedRestrainedRecoveryAnimations;
    TArrayNoInit<FName> StungStandingReactionAnimations;
    TArrayNoInit<FName> StungStandingNoWeaponReactionAnimations;
    TArrayNoInit<FName> StungCrouchingReactionAnimations;
    TArrayNoInit<FName> StungCrouchingNoWeaponReactionAnimations;
    TArrayNoInit<FName> StungCompliantReactionAnimations;
    TArrayNoInit<FName> StungRestrainedReactionAnimations;
    TArrayNoInit<FName> StungStandingAffectedAnimations;
    TArrayNoInit<FName> StungStandingNoWeaponAffectedAnimations;
    TArrayNoInit<FName> StungCrouchingAffectedAnimations;
    TArrayNoInit<FName> StungCrouchingNoWeaponAffectedAnimations;
    TArrayNoInit<FName> StungCompliantAffectedAnimations;
    TArrayNoInit<FName> StungRestrainedAffectedAnimations;
    TArrayNoInit<FName> StungStandingRecoveryAnimations;
    TArrayNoInit<FName> StungStandingNoWeaponRecoveryAnimations;
    TArrayNoInit<FName> StungCrouchingRecoveryAnimations;
    TArrayNoInit<FName> StungCrouchingNoWeaponRecoveryAnimations;
    TArrayNoInit<FName> StungCompliantRecoveryAnimations;
    TArrayNoInit<FName> StungRestrainedRecoveryAnimations;
    TArrayNoInit<FName> StandingFlinchAnimations;
    TArrayNoInit<FName> CrouchingFlinchAnimations;
    TArrayNoInit<FName> CompliantFlinchAnimations;
    TArrayNoInit<FName> RestrainedFlinchAnimations;
    FVector UnderhandThrownProjectileInitialOffset;
    FVector OverhandThrownProjectileInitialOffset;
    INT ThrownProjectilePitch;
    FName ThrowShortAnimation;
    FName ThrowLongAnimation;
    FName ThrowFromLeftAnimation;
    FName ThrowFromRightAnimation;
    FLOAT ThrowAnimationTweenTime;
    FLOAT MaxUnderhandThrowDistance;
    FLOAT ZPositiveOffsetForOverhandThrow;
    FVector ShoulderOffset;
    FLOAT MinLastRenderedTimeDeltaForRelevency;
    FLOAT MinTimeBetweenFireHG;
    FLOAT MaxTimeBetweenFireHG;
    FLOAT MinTimeBetweenFireSMGSingleShot;
    FLOAT MaxTimeBetweenFireSMGSingleShot;
    FLOAT MinTimeBetweenFireSMGBurst;
    FLOAT MaxTimeBetweenFireSMGBurst;
    FLOAT MinTimeBetweenFireSMGFullAuto;
    FLOAT MaxTimeBetweenFireSMGFullAuto;
    FLOAT MinTimeBetweenFireMGSingleShot;
    FLOAT MaxTimeBetweenFireMGSingleShot;
    FLOAT MinTimeBetweenFireMGFullBurst;
    FLOAT MaxTimeBetweenFireMGFullBurst;
    FLOAT MinTimeBetweenFireMGFullAuto;
    FLOAT MaxTimeBetweenFireMGFullAuto;
    FLOAT MinTimeBetweenFireShotgun;
    FLOAT MaxTimeBetweenFireShotgun;
    FLOAT EndTimeToStopFiringFullAuto;
    TArrayNoInit<FName> TurnAwayAnimationHG;
    TArrayNoInit<FName> TurnAwayAnimationSG;
    TArrayNoInit<FName> TurnAwayAnimationMG;
    TArrayNoInit<FName> TurnAwayAnimationSMG;
    TArrayNoInit<FName> TurnAwayAnimationPB;
    class UArchetypeInstance* ArchetypeInstance;
    BITFIELD bUsesAwarenessForPathfindingCost:1;
    BITFIELD bUsesCoverForPathfindingCost:1;
    TArrayNoInit<class APawn*> OtherPawnsToFavorCoveredPathFrom;
    class AActor* CurrentWeaponTarget;
    FVector CurrentWeaponTargetLocation;
    FLOAT NextCanHitWeaponTraceToggleTime;
    BITFIELD bCanHitUsesWeaponTrace:1;
    FVector vGrenadeTargetLocation;
    BYTE ThrowSide;
    BITFIELD bHasBeenReportedToTOC:1;
    FName SpawnedFromName;
    class UCommanderGoal* Commander;
    class USpeechManagerGoal* SpeechManager;
    FVector LastVelocity;
    class ASoundInstance* LatentSound;
    BITFIELD MoveMouthDuringEffect:1;
    TArrayNoInit<class AStaircaseAimVolume*> TouchingStaircaseAimVolumes;
    BITFIELD bIsAimLocked:1;
    BITFIELD bDebugPathLines:1;
    FName CurrentEffectEventName;
    INT CurrentSeed;
    BITFIELD bEffectEventStillPlaying:1;
    BITFIELD bDebugSensor:1;
	   DECLARE_FUNCTION(execCanMoveFreely);
	   DECLARE_FUNCTION(execIsOtherActorAThreat);
	   DECLARE_FUNCTION(execGetCommanderAction);
	   DECLARE_FUNCTION(execSetWeaponTarget);
	   DECLARE_FUNCTION(execCanHitTargetAt);
	   DECLARE_FUNCTION(execIsRelevantToPlayerOrOfficers);
	   DECLARE_FUNCTION(execGetViewPoint);
	   DECLARE_FUNCTION(execGetViewDirection);
	   DECLARE_FUNCTION(execSetupVisionBone);
	  void	eventShowAimingDebugInfo()
	  {
		   ProcessEvent(FindFunctionChecked(SWATGAME_ShowAimingDebugInfo),NULL);
	  }
	  void	eventDebugTyrionInfo(class UAI_Resource* resource)
	  {
        ASwatAI_eventDebugTyrionInfo_Parms Parms;
		   Parms.resource=resource;
        ProcessEvent(FindFunctionChecked(SWATGAME_DebugTyrionInfo),&Parms);
	  }
	  void	eventSetWeaponTargetLocation(FVector TargetLocation)
	  {
        ASwatAI_eventSetWeaponTargetLocation_Parms Parms;
		   Parms.TargetLocation=TargetLocation;
        ProcessEvent(FindFunctionChecked(SWATGAME_SetWeaponTargetLocation),&Parms);
	  }
	  void	eventPlayerBlockingPath()
	  {
		   ProcessEvent(FindFunctionChecked(SWATGAME_PlayerBlockingPath),NULL);
	  }
	  FLOAT	eventGetExtraCostForPoint(class ANavigationPoint* Point)
	  {
        ASwatAI_eventGetExtraCostForPoint_Parms Parms;
		   Parms.ReturnValue=0;
		   Parms.Point=Point;
        ProcessEvent(FindFunctionChecked(SWATGAME_GetExtraCostForPoint),&Parms);
		   return Parms.ReturnValue;
	  }
	  void	eventNotifyStoppedMoving()
	  {
		   ProcessEvent(FindFunctionChecked(SWATGAME_NotifyStoppedMoving),NULL);
	  }
	  void	eventNotifyStartedMoving()
	  {
		   ProcessEvent(FindFunctionChecked(SWATGAME_NotifyStartedMoving),NULL);
	  }
	   DECLARE_CLASS(ASwatAI,ASwatRagdollPawn,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(ASwatAI)
};

// Class	ASwatAICharacter is declared in "..\SwatGame\Classes\AI\SwatAICharacter.uc"
class SWATGAME_API	ASwatAICharacter	: public ASwatAI
{
public:
    class UCharacterArchetypeInstance* Instance;
    FLOAT InitialMorale;
    FName VoiceType;
    FName CharacterType;
    FLOAT LastTimeFlashBanged;
    FLOAT FlashBangedDuration;
    FLOAT LastTimeGassed;
    FLOAT GassedDuration;
    FLOAT LastTimePepperSprayed;
    FLOAT PepperSprayedDuration;
    FLOAT LastTimeTased;
    FLOAT TasedDuration;
    FLOAT LastTimeStung;
    FLOAT StungDuration;
    FLOAT LastTimeStunnedByC2;
    FLOAT StunnedByC2Duration;
    BITFIELD bCanBeArrested:1;
    FStringNoInit RestrainedHandcuffsClassName;
    class AHandheldEquipment* RestrainedHandcuffs;
    FLOAT IncapacitatedHealthAmount;
    BITFIELD bIsAggressive:1;
    BITFIELD bTaserKillsMe:1;
    BITFIELD bGasAffectsMe:1;
    BITFIELD bPepperKillsMe:1;
    class UAwarenessProxy* Awareness;
    FLOAT AwarenessCounter;
    BITFIELD bAwarenessDisabled:1;
    class UMaterial* ReplicatedSkins[4];
    class UMesh* ReplicatedMesh;
    BITFIELD bReplicatedIsFemale:1;
    class UClass* ReplicatedEquipment1Class;
    class UClass* ReplicatedEquipment2Class;
    class UClass* ReplicatedEquipment3Class;
    class UClass* ReplicatedEquipment4Class;
    TArrayNoInit<class AEquipment*> NetEquipment;
    BYTE DesiredAIEquipment;
    BITFIELD ReplicatedShouldUsePatrolAnims:1;
	   DECLARE_FUNCTION(execForceUpdateAwareness);
	   DECLARE_FUNCTION(execIsStunned);
	   DECLARE_FUNCTION(execIsStunnedByC2);
	   DECLARE_FUNCTION(execIsTased);
	   DECLARE_FUNCTION(execIsStung);
	   DECLARE_FUNCTION(execIsPepperSprayed);
	   DECLARE_FUNCTION(execIsGassed);
	   DECLARE_FUNCTION(execIsFlashbanged);
	  void	eventOnDesiredAIEquipmentChanged()
	  {
		   ProcessEvent(FindFunctionChecked(SWATGAME_OnDesiredAIEquipmentChanged),NULL);
	  }
	  void	eventReplicatedEquipmentClassOnChanged(class UClass* EquipmentClass)
	  {
        ASwatAICharacter_eventReplicatedEquipmentClassOnChanged_Parms Parms;
		   Parms.EquipmentClass=EquipmentClass;
        ProcessEvent(FindFunctionChecked(SWATGAME_ReplicatedEquipmentClassOnChanged),&Parms);
	  }
	  void	eventReplicatedSkinsOnChanged(INT SkinIndex)
	  {
        ASwatAICharacter_eventReplicatedSkinsOnChanged_Parms Parms;
		   Parms.SkinIndex=SkinIndex;
        ProcessEvent(FindFunctionChecked(SWATGAME_ReplicatedSkinsOnChanged),&Parms);
	  }
	  void	eventReplicatedMeshInfoOnChanged()
	  {
		   ProcessEvent(FindFunctionChecked(SWATGAME_ReplicatedMeshInfoOnChanged),NULL);
	  }
	   DECLARE_CLASS(ASwatAICharacter,ASwatAI,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(ASwatAICharacter)
};

// Class	ASwatEnemy is declared in "..\SwatGame\Classes\AI\SwatEnemy.uc"
class SWATGAME_API	ASwatEnemy	: public ASwatAICharacter
{
public:
    BYTE Skill;
    BITFIELD bDontInvestigate:1;
    BYTE CurrentState;
    BITFIELD bThreat:1;
    BITFIELD bIsSprinting:1;
    FLOAT LowSkillAdditionalBaseAimError;
    FLOAT MediumSkillAdditionalBaseAimError;
    FLOAT HighSkillAdditionalBaseAimError;
    FLOAT unused1;
    FLOAT unused2;
    FLOAT unused3;
    FLOAT unused4;
    FLOAT unused5;
    FLOAT unused6;
    class ATimer* ThreatTimer;
    TArrayNoInit<FName> unused8;
    TArrayNoInit<FName> unused9;
    TArrayNoInit<FName> unused10;
    TArrayNoInit<FName> unused11;
    FLOAT unused12;
    FLOAT unused13;
    FLOAT unused14;
    BITFIELD bEnteredFleeSafeguard:1;
    class AFiredWeapon* PrimaryWeapon;
    class AFiredWeapon* BackupWeapon;
    class AWieldableEvidenceEquipment* HeldEvidence;
    class USwatAIData* AIData;
    class UClass* ReplicatedPrimaryWeaponClass;
    class UClass* ReplicatedPrimaryWeaponAmmoClass;
    class UClass* ReplicatedBackupWeaponClass;
    class UClass* ReplicatedBackupWeaponAmmoClass;
    FStringNoInit DroppedPrimaryWeaponModelUniqueID;
    FStringNoInit DroppedBackupWeaponModelUniqueID;
	   DECLARE_FUNCTION(execGetAdditionalBaseAimError);
	   DECLARE_FUNCTION(execActorIsInSameOrAdjacentZoneAsMe);
	  BITFIELD	eventActorIsInSameOrAdjacentZoneAsMe(class AActor* theOtherActor)
	  {
        ASwatEnemy_eventActorIsInSameOrAdjacentZoneAsMe_Parms Parms;
		   Parms.ReturnValue=0;
		   Parms.theOtherActor=theOtherActor;
        ProcessEvent(FindFunctionChecked(SWATGAME_ActorIsInSameOrAdjacentZoneAsMe),&Parms);
		   return Parms.ReturnValue;
	  }
	  void	eventReplicatedBackupWeaponClassInfoOnChanged()
	  {
		   ProcessEvent(FindFunctionChecked(SWATGAME_ReplicatedBackupWeaponClassInfoOnChanged),NULL);
	  }
	  void	eventReplicatedPrimaryWeaponClassInfoOnChanged()
	  {
		   ProcessEvent(FindFunctionChecked(SWATGAME_ReplicatedPrimaryWeaponClassInfoOnChanged),NULL);
	  }
	   DECLARE_CLASS(ASwatEnemy,ASwatAICharacter,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(ASwatEnemy)
};

// Class	ASwatHostage is declared in "..\SwatGame\Classes\AI\SwatHostage.uc"
class SWATGAME_API	ASwatHostage	: public ASwatAICharacter
{
public:
    BYTE CurrentState;
    BITFIELD bSpawnedAsIncapacitated:1;
	   DECLARE_CLASS(ASwatHostage,ASwatAICharacter,0|CLASS_Config,SwatGame)
    // Will return NULL if this actor has no cover plane, or should not be
    // used as cover. A valid poly's coordinates will be relative to the origin.
    virtual const FPoly * GetCoverPlanePoly() const;
    // If TRUE, the CoverPlane should be rotated about the Z axis as-needed
    virtual UBOOL CanCoverPlaneBillboard() const;
    // Returns TRUE if the cover plane cannot move
    virtual UBOOL IsCoverPlaneStatic() const;

	virtual UBOOL IsOtherActorAThreat(AActor* otherActor);
};

// Class	ASwatTrainer is declared in "..\SwatGame\Classes\AI\SwatTrainer.uc"
class SWATGAME_API	ASwatTrainer	: public ASwatAICharacter
{
public:
	   DECLARE_CLASS(ASwatTrainer,ASwatAICharacter,0|CLASS_Config,SwatGame)
    virtual bool ShouldPlayerLowReadyWhenPointingAtMe(ASwatPlayer* Player);
};

// Class	ASwatOfficer is declared in "..\SwatGame\Classes\AI\SwatOfficer.uc"
class SWATGAME_API	ASwatOfficer	: public ASwatAI
{
public:
    FStringNoInit OfficerLoadOutType;
    class AOfficerLoadOut* LoadOut;
    FStringNoInit OfficerFriendlyName;
    class UFormation* CurrentFormation;
    class ASwatDoor* DoorToBlowC2On;
    BITFIELD bIgnoreDoorBlocking:1;
    FLOAT NotUsed;
    class UMaterial* ViewportOverlayMaterial;
    FLOAT NextTimeCanReactToHarmlessShotByPlayer;
    FLOAT DeltaReactionTimeBetweenHarmlessShot;
    class ATimer* NotifyStoppedMovingTimer;
	   DECLARE_FUNCTION(execGetOfficerCommanderAction);
	   DECLARE_CLASS(ASwatOfficer,ASwatAI,0|CLASS_Config,SwatGame)
	virtual UBOOL IsOtherActorAThreat(AActor* otherActor);
	UOfficerCommanderAction* GetOfficerCommanderAction() { check(Commander); check(Commander->achievingAction); return Cast<UOfficerCommanderAction>(Commander->achievingAction); }

    // Provides some extra checks for actor-to-pawn collision
    // Overridden from APawn.h. If the other actor is also a SwatOfficer, they
    // should not collide.
    virtual bool WillCollide(const AActor * otherActor, const FVector & otherActorTestLocation) const
    {
        if (otherActor->IsA(ASwatOfficer::StaticClass()))
        {
            return false;
        }

        return Super::WillCollide(otherActor, otherActorTestLocation);
    }
};

// Class	ASwatPlayer is declared in "..\SwatGame\Classes\SwatPlayer.uc"
class SWATGAME_API	ASwatPlayer	: public ASwatRagdollPawn
{
public:
    class AOfficerLoadOut* LoadOut;
    INT ThrownProjectilePitch;
    class AHandheldEquipment* GivenPepperSpray;
    FName unused1;
    FName unused2;
    FName unused3;
    FName unused4;
    FLOAT ThrowAnimationTweenTime;
    FLOAT unused5;
    FRange unused6;
    class UMaterial* SuspectHandsMaterial;
    class UMaterial* VIPHandsMaterial;
    BITFIELD Unused7:1;
    class ATimer* StungTimer;
    class ATimer* FlashbangedTimer;
    class ATimer* GassedTimer;
    class ATimer* PepperSprayedTimer;
    class ATimer* TasedTimer;
    BYTE LastStingWeapon;
    FLOAT LastStungTime;
    FLOAT LastStungDuration;
    FLOAT LastFlashbangedTime;
    FLOAT LastGassedTime;
    FLOAT LastGassedDuration;
    FLOAT LastPepperedTime;
    FLOAT LastPepperedDuration;
    FLOAT LastTasedTime;
    FLOAT LastTasedDuration;
    BYTE bIsTriggered_ReactedBang;
    BYTE bIsTriggered_ReactedGas;
    BYTE bIsTriggered_ReactedPepper;
    BYTE bIsTriggered_ReactedSting;
    BYTE bIsTriggered_ReactedTaser;
    class UPerlinNoise* PerlinNoiseAxisA;
    class UPerlinNoise* PerlinNoiseAxisB;
    FLOAT StingEffectDropOffTimePercent;
    FLOAT StingEffectFrequency;
    FRotator StingViewEffectAmplitude;
    FLOAT StingInputEffectAmplitude;
    FLOAT unused8;
    FLOAT unused9;
    BITFIELD EquipOtherAfterUsed:1;
    BYTE SlotForReequip;
    BITFIELD DoneThrowing:1;
    FLOAT ThrowHeldTime;
    BITFIELD bForceCrouchWhileOptiwanding:1;
    BITFIELD bIsUsingOptiwand:1;
    class ADeployedC2ChargeBase* DeployedC2Charge;
    class AHandheldEquipment* GivenFlashbangs;
    class IIAmReportableCharacter* CurrentReportableCharacter;
    INT ArmInjuryFlags;
    class ASwatPlayer* LastArrester;
    FVector OneFrameNudgeDirection;
    class AHandheldEquipment* GivenStinger;
    FLOAT CurrentLimp;
    class AHandheldEquipment* GivenGas;
    FStringNoInit YouString;
    class AHandheldEquipment* GivenC2;
    class AHandheldEquipment* GivenWedge;
    BITFIELD bHasBeenReportedToTOC:1;
    class ACommandArrow* CommandArrow;
    class AEquipmentUsedOnOther* CachedQualifyEquipment;
    class AActor* CachedQualifyTarget;
	   DECLARE_FUNCTION(execGetLeanRotationOffset);
	   DECLARE_FUNCTION(execGetLeanPositionOffset);
	   DECLARE_FUNCTION(execGetViewPoint);
	   DECLARE_FUNCTION(execUnTriggerAllNonLethalEffectEvents);
	   DECLARE_FUNCTION(execUpdateNonLethalEffectEvents);
	  void	eventUnTriggerNonLethaledEffectEvent(FName EffectEventName)
	  {
        ASwatPlayer_eventUnTriggerNonLethaledEffectEvent_Parms Parms;
		   Parms.EffectEventName=EffectEventName;
        ProcessEvent(FindFunctionChecked(SWATGAME_UnTriggerNonLethaledEffectEvent),&Parms);
	  }
	  void	eventTriggerNonLethaledEffectEvent(FName EffectEventName)
	  {
        ASwatPlayer_eventTriggerNonLethaledEffectEvent_Parms Parms;
		   Parms.EffectEventName=EffectEventName;
        ProcessEvent(FindFunctionChecked(SWATGAME_TriggerNonLethaledEffectEvent),&Parms);
	  }
	  void	eventApplyOneFrameNudgeRotationOffset(FVector& Acceleration)
	  {
        ASwatPlayer_eventApplyOneFrameNudgeRotationOffset_Parms Parms;
		   Parms.Acceleration=Acceleration;
        ProcessEvent(FindFunctionChecked(SWATGAME_ApplyOneFrameNudgeRotationOffset),&Parms);
		   Acceleration=Parms.Acceleration;
	  }
	  void	eventApplyStungRotationOffset(FVector& Acceleration)
	  {
        ASwatPlayer_eventApplyStungRotationOffset_Parms Parms;
		   Parms.Acceleration=Acceleration;
        ProcessEvent(FindFunctionChecked(SWATGAME_ApplyStungRotationOffset),&Parms);
		   Acceleration=Parms.Acceleration;
	  }
	  void	eventOnCurrentLimpChanged()
	  {
		   ProcessEvent(FindFunctionChecked(SWATGAME_OnCurrentLimpChanged),NULL);
	  }
	   DECLARE_CLASS(ASwatPlayer,ASwatRagdollPawn,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(ASwatPlayer)
};

// Class	ANetPlayer is declared in "..\SwatGame\Classes\Net\NetPlayer.uc"
class SWATGAME_API	ANetPlayer	: public ASwatPlayer
{
public:
    BITFIELD bReplicateSkins:1;
    class ADynamicLoadOutSpec* DynamicLoadOutSpec;
    class UMaterial* ReplicatedSkins[7];
    class UClass* ReplicatedLoadOutSpec[27];
    FStringNoInit ReplicatedCustomSkinClassName;
    BITFIELD bThisPlayerIsTheVIP:1;
    BITFIELD bThisPlayerHasTheItem:1;
    FLOAT QualifyTime;
    FVector BeingCuffedTargetLocation;
    FRotator BeingCuffedTargetRotation;
    FLOAT IdealCuffingDistanceBetweenPawns;
    INT TeamNumber;
    class UMesh* VIPMesh;
    BITFIELD bLoadOutInitialized:1;
    INT LoadOutSpecCount;
    INT SkinsCount;
    BYTE CurrentWeaponPocket;
    INT CurrentAmmoCounts[10];
    INT CurrentClip;
    BYTE VoiceType;
    INT SwatPlayerID;
    class UMaterial* ViewportOverlayMaterial;
	   DECLARE_FUNCTION(execAllVarsHaveReplicated);
	  void	eventOnAmmoInfoChanged()
	  {
		   ProcessEvent(FindFunctionChecked(SWATGAME_OnAmmoInfoChanged),NULL);
	  }
	  void	eventPostReplication()
	  {
		   ProcessEvent(FindFunctionChecked(SWATGAME_PostReplication),NULL);
	  }
	  BITFIELD	eventAllVarsHaveReplicated()
	  {
        ANetPlayer_eventAllVarsHaveReplicated_Parms Parms;
		   Parms.ReturnValue=0;
        ProcessEvent(FindFunctionChecked(SWATGAME_AllVarsHaveReplicated),&Parms);
		   return Parms.ReturnValue;
	  }
	   DECLARE_CLASS(ANetPlayer,ASwatPlayer,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(ANetPlayer)
};

// Class	APlayerFocusInterface is declared in "..\SwatGame\Classes\PlayerInteraction\PlayerFocusInterface.uc"
class SWATGAME_API	APlayerFocusInterface	: public AActor
{
public:
    FLOAT Range;
    TArrayNoInit<FFocus> Foci;
    INT FociLength;
    BITFIELD FocusIsBlocked:1;
    TArrayNoInit<FName> DoorRelatedContext;
    class UClass* DoorRelatedContextClass;
    TArrayNoInit<class UPlayerInterfaceDoorRelatedContext*> DoorRelatedContexts;
    TArrayNoInit<FName> Context;
    class UClass* ContextClass;
    TArrayNoInit<class UPlayerInterfaceContext*> Contexts;
    BITFIELD AlwaysAddDoor:1;
    BITFIELD AlwaysPostUpdate:1;
    class ASwatGamePlayerController* PlayerController;
    class ASwatPlayer* PlayerPawn;
    FName FocusInterfaceType;
	   DECLARE_FUNCTION(execRejectFocus);
	  void	eventPostDoorRelatedFocusAdded(class UPlayerInterfaceDoorRelatedContext* Context, class AActor* Target, BYTE SkeletalRegionHit)
	  {
        APlayerFocusInterface_eventPostDoorRelatedFocusAdded_Parms Parms;
		   Parms.Context=Context;
		   Parms.Target=Target;
		   Parms.SkeletalRegionHit=SkeletalRegionHit;
        ProcessEvent(FindFunctionChecked(SWATGAME_PostDoorRelatedFocusAdded),&Parms);
	  }
	  void	eventPostFocusAdded(class UPlayerInterfaceContext* Context, class AActor* Target, BYTE SkeletalRegionHit)
	  {
        APlayerFocusInterface_eventPostFocusAdded_Parms Parms;
		   Parms.Context=Context;
		   Parms.Target=Target;
		   Parms.SkeletalRegionHit=SkeletalRegionHit;
        ProcessEvent(FindFunctionChecked(SWATGAME_PostFocusAdded),&Parms);
	  }
	  void	eventAddFocus(FName Context, class AActor* Actor, FVector Location, FVector Normal, class UMaterial* Material, BYTE Region)
	  {
        APlayerFocusInterface_eventAddFocus_Parms Parms;
		   Parms.Context=Context;
		   Parms.Actor=Actor;
		   Parms.Location=Location;
		   Parms.Normal=Normal;
		   Parms.Material=Material;
		   Parms.Region=Region;
        ProcessEvent(FindFunctionChecked(SWATGAME_AddFocus),&Parms);
	  }
	  void	eventPostDoorRelatedContextMatched(class UPlayerInterfaceDoorRelatedContext* Context, class AActor* Target)
	  {
        APlayerFocusInterface_eventPostDoorRelatedContextMatched_Parms Parms;
		   Parms.Context=Context;
		   Parms.Target=Target;
        ProcessEvent(FindFunctionChecked(SWATGAME_PostDoorRelatedContextMatched),&Parms);
	  }
	  void	eventPostContextMatched(class UPlayerInterfaceContext* Context, class AActor* Target)
	  {
        APlayerFocusInterface_eventPostContextMatched_Parms Parms;
		   Parms.Context=Context;
		   Parms.Target=Target;
        ProcessEvent(FindFunctionChecked(SWATGAME_PostContextMatched),&Parms);
	  }
	   DECLARE_CLASS(APlayerFocusInterface,AActor,0|CLASS_Config,SwatGame)
    virtual UBOOL DoorRelatedContextMatches(UPlayerInterfaceDoorRelatedContext* DoorRelatedContext, ASwatDoor* Door) { return false; }
    virtual UBOOL ContextMatches(UPlayerInterfaceContext* inContext, AActor* Candidate) { return false; }
};

// Class	ACommandInterface is declared in "..\SwatGame\Classes\PlayerInteraction\CommandInterface.uc"
class SWATGAME_API	ACommandInterface	: public APlayerFocusInterface
{
public:
    class AOfficerTeamInfo* Element;
    class AOfficerTeamInfo* RedTeam;
    class AOfficerTeamInfo* BlueTeam;
    class AOfficerTeamInfo* CurrentCommandTeam;
    class UClass* ContextsListClass;
    class UClass* MenuInfoClass;
    TArrayNoInit<class UCommandInterfaceMenuInfo*> MenuInfo;
    class UClass* StaticCommandsClass;
    TArrayNoInit<FName> StaticCommands;
    class UClass* CommandClass;
    TArrayNoInit<class UCommand*> Commands;
    BITFIELD Enabled:1;
    BITFIELD DefaultCommandEnabled:1;
    BITFIELD ValidateCommandFocus:1;
    BYTE CurrentPage;
    BYTE CurrentMainPage;
    class UCommand* DefaultCommand;
    INT DefaultPriority;
    class UCommand* CurrentOverrideDefaultCommand;
    class UGUIDefaultCommandIndicator* DefaultCommandControl;
    class UGUILabel* RedHeldCommandControl;
    class UGUILabel* BlueHeldCommandControl;
    class UGUILabel* ElementHeldCommandControl;
    class UGUILabel* CurrentMainPageControl;
    class UCommand* RedHeldCommand;
    class UCommand* BlueHeldCommand;
    class UCommand* ElementHeldCommand;
    BITFIELD Selected:1;
    class UCommand* PendingCommand;
    FVector PendingCommandOrigin;
    class AOfficerTeamInfo* PendingCommandTeam;
    TArrayNoInit<FFocus> PendingCommandFoci;
    INT PendingCommandFociLength;
    class ASwatAICharacter* PendingCommandTargetCharacter;
    BITFIELD PendingCommandHold:1;
    FName ExpectedCommand;
    FName ExpectedCommandTeam;
    FName ExpectedCommandTargetDoor;
    FName ExpectedCommandSource;
    class ASwatDoor* CurrentDoorFocus;
    class AOfficerTeamInfo* LastCommandTeam;
    BITFIELD CommandSpeechInitialized:1;
    BITFIELD DebugTerminalLocation:1;
    FVector LastFocusUpdateOrigin;
    FStringNoInit GaveCommandString;
    BITFIELD SometimesSendInterruptedCommand:1;
    FStringNoInit CurrentSpeechCommand;
    FLOAT CurrentSpeechCommandTime;
	   DECLARE_FUNCTION(execTeamCanExecuteCommand);
	   DECLARE_FUNCTION(execGetColorizedCommandText);
	  FString	eventColorizeExpectedCommand(class UCommand* Command)
	  {
        ACommandInterface_eventColorizeExpectedCommand_Parms Parms;
		   Parms.Command=Command;
        ProcessEvent(FindFunctionChecked(SWATGAME_ColorizeExpectedCommand),&Parms);
		   return Parms.ReturnValue;
	  }
	   DECLARE_CLASS(ACommandInterface,APlayerFocusInterface,0|CLASS_Config,SwatGame)
    virtual UBOOL DoorRelatedContextMatches(UPlayerInterfaceDoorRelatedContext* DoorRelatedContext, ASwatDoor* Door);
    virtual UBOOL ContextMatches(UPlayerInterfaceContext* inContext, AActor* Candidate);
    FString GetColorizedCommandText(UCommand* Command);
};

// Class	AGraphicCommandInterface is declared in "..\SwatGame\Classes\PlayerInteraction\GraphicCommandInterface.uc"
class SWATGAME_API	AGraphicCommandInterface	: public ACommandInterface
{
public:
    class UGUIGraphicCommandInterface* View;
    BITFIELD bIsClosed:1;
    BITFIELD bWasClosedBeforePageChange:1;
	   DECLARE_CLASS(AGraphicCommandInterface,ACommandInterface,0|CLASS_Config,SwatGame)
    UBOOL Tick(FLOAT DeltaSeconds, enum ELevelTick TickType);
};

// Class	AFireInterface is declared in "..\SwatGame\Classes\PlayerInteraction\FireInterface.uc"
class SWATGAME_API	AFireInterface	: public APlayerFocusInterface
{
public:
    class ASwatDoor* LastDoorFocus;
	   DECLARE_FUNCTION(execRejectFocus);
	   DECLARE_CLASS(AFireInterface,APlayerFocusInterface,0|CLASS_Config,SwatGame)
    virtual UBOOL DoorRelatedContextMatches(UPlayerInterfaceDoorRelatedContext* DoorRelatedContext, ASwatDoor* Door);
    virtual UBOOL ContextMatches(UPlayerInterfaceContext* inContext, AActor* Candidate);
};

// Class	ALowReadyInterface is declared in "..\SwatGame\Classes\PlayerInteraction\LowReadyInterface.uc"
class SWATGAME_API	ALowReadyInterface	: public APlayerFocusInterface
{
public:
    FLOAT LowReadyRefractoryPeriod;
    FLOAT LastTimeLowReadyRefractoryBegan;
    BITFIELD ShouldLowReady:1;
    FName LowReadyReason;
	   DECLARE_CLASS(ALowReadyInterface,APlayerFocusInterface,0|CLASS_Config,SwatGame)
    virtual UBOOL DoorRelatedContextMatches(UPlayerInterfaceDoorRelatedContext* DoorRelatedContext, ASwatDoor* Door);
    virtual UBOOL ContextMatches(UPlayerInterfaceContext* inContext, AActor* Candidate);
};

// Class	APlayerTagInterface is declared in "..\SwatGame\Classes\PlayerInteraction\PlayerTagInterface.uc"
class SWATGAME_API	APlayerTagInterface	: public APlayerFocusInterface
{
public:
    class UHUDPageBase* CachedHUDPage;
    class ASwatPawn* CachedPlayerTarget;
    class ASwatPawn* PlayerTargetDuringUpdate;
    class ATimer* TagTimeoutTimer;
    class ATimer* HoverTimer;
    BITFIELD bShowEnemyTags:1;
    BITFIELD bShowFriendlyTags:1;
    FLOAT FriendlyHoverDuration;
    FLOAT EnemyHoverDuration;
    FLOAT TagTimeoutDuration;
    FStringNoInit FriendlyTagStyle;
    FStringNoInit EnemyTagStyle;
    FStringNoInit LeaderTagStyle;
    class ASwatGameReplicationInfo* CachedRep;
    BITFIELD bLoadedFromRepo:1;
	   DECLARE_FUNCTION(execRejectFocus);
	   DECLARE_CLASS(APlayerTagInterface,APlayerFocusInterface,0|CLASS_Config,SwatGame)
    virtual UBOOL DoorRelatedContextMatches(UPlayerInterfaceDoorRelatedContext* DoorRelatedContext, ASwatDoor* Door) {return true; }
    virtual UBOOL ContextMatches(UPlayerInterfaceContext* inContext, AActor* Candidate);
};

// Class	AUseInterface is declared in "..\SwatGame\Classes\PlayerInteraction\UseInterface.uc"
class SWATGAME_API	AUseInterface	: public APlayerFocusInterface
{
public:
    FStringNoInit UseFeedbackText;
    FStringNoInit OtherFeedbackText;
    class UHUDPageBase* CachedHUDPage;
    BITFIELD LookingThruGlass:1;
	   DECLARE_CLASS(AUseInterface,APlayerFocusInterface,0|CLASS_Config,SwatGame)
    virtual UBOOL DoorRelatedContextMatches(UPlayerInterfaceDoorRelatedContext* DoorRelatedContext, ASwatDoor* Door);
    virtual UBOOL ContextMatches(UPlayerInterfaceContext* inContext, AActor* Candidate);
};

// Class	ASpawner is declared in "..\SwatGame\Classes\Spawning\Spawner.uc"
class SWATGAME_API	ASpawner	: public ASpawnerBase
{
public:
    FName SpawnerGroup;
    BYTE SpawnMode;
    BYTE MissionSpawn;
    BYTE StartPointDependent;
    TArrayNoInit<FChanceArchetypePair> Archetypes;
    INT Priority;
    class UClass* ArchetypeClass;
    INT ProfileArrayIndex;
    BITFIELD HasSpawned:1;
    class AActor* Spawned;
    class UArchetype* Archetype;
    BITFIELD SpawnedFromRoster:1;
    TArrayNoInit<class UTexture*> SpawnerSprites;
    TArrayNoInit<FName> AntiSlaves;
    class ASwatGameInfo* Game;
    BITFIELD Disabled:1;
	   DECLARE_CLASS(ASpawner,ASpawnerBase,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(ASpawner)
};

// Class	AEnemySpawner is declared in "..\SwatGame\Classes\Spawning\EnemySpawner.uc"
class SWATGAME_API	AEnemySpawner	: public ASpawner
{
public:
    class UPatrolList* EnemyPatrol;
    BITFIELD SpawnAnInvestigator:1;
    FName IdleCategoryOverride;
	   DECLARE_CLASS(AEnemySpawner,ASpawner,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(AEnemySpawner)
};

// Class	AHostageSpawner is declared in "..\SwatGame\Classes\Spawning\HostageSpawner.uc"
class SWATGAME_API	AHostageSpawner	: public ASpawner
{
public:
    class UPatrolList* HostagePatrol;
    FName IdleCategoryOverride;
    BITFIELD SpawnIncapacitated:1;
    class UTexture* IncapacitatedTexture;
	   DECLARE_CLASS(AHostageSpawner,ASpawner,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(AHostageSpawner)
};

// Class	ADoorAttachment is declared in "..\SwatGame\Classes\Doors\DoorAttachment.uc"
class SWATGAME_API	ADoorAttachment	: public AStaticMeshActor
{
public:
	   DECLARE_CLASS(ADoorAttachment,AStaticMeshActor,0|CLASS_Config,SwatGame)
    void PredictedBoxAdjustmentHook(FBox& PredictedBox);
};

// Class	ADoorModel is declared in "..\SwatGame\Classes\Doors\DoorModel.uc"
class SWATGAME_API	ADoorModel	: public ADoorAttachment
{
public:
    class ASwatDoor* Door;
    FRotator SavedRotation;
    FVector SavedLocation;
	   DECLARE_CLASS(ADoorModel,ADoorAttachment,0|CLASS_Transient|CLASS_Config,SwatGame)
	void ProcedurallyOpenDoorModel(DoorPosition OpenPosition);
	void ProcedurallyCloseDoorModel();
};

// Class	ASwatMPStartCluster is declared in "..\SwatGame\Classes\SwatMPStartCluster.uc"
class SWATGAME_API	ASwatMPStartCluster	: public AActor
{
public:
    BYTE ClusterTeam;
    BITFIELD UseInBarricadedSuspects:1;
    BITFIELD UseInVIPEscort:1;
    BITFIELD UseInRapidDeployment:1;
    BITFIELD UseInSmashAndGrab:1;
    BITFIELD NeverFirstSpawnInBSRound:1;
    BITFIELD NeverFirstSpawnInVIPRound:1;
    BITFIELD NeverFirstSpawnInRDRound:1;
    BITFIELD NeverFirstSpawnInSAGRound:1;
    BITFIELD IsPrimaryEntryPoint:1;
    BITFIELD IsSecondaryEntryPoint:1;
    BITFIELD IsEnabled:1;
    INT NumberOfStartPoints;
    class ASwatMPStartPoint* StartPoints[16];
    FStringNoInit MPStartPointIconNamePrefix;
    FStringNoInit MPStartClusterIconNamePrefix;
	   DECLARE_CLASS(ASwatMPStartCluster,AActor,0|CLASS_Config,SwatGame)
	virtual void CheckForErrors();
    virtual void PostEditAdd(GroupFactory& Grouper);
	virtual void UpdateIcons();
	virtual void PostEditChange();
	virtual void PostEditLoad();
};

// Class	ASwatMPStartPoint is declared in "..\SwatGame\Classes\SwatMPStartPoint.uc"
class SWATGAME_API	ASwatMPStartPoint	: public AActor
{
public:
    FLOAT LastSpawnCampTime;
    class ASwatMPStartCluster* Cluster;
    BITFIELD bNotBased:1;
	   DECLARE_CLASS(ASwatMPStartPoint,AActor,0|CLASS_Config,SwatGame)
	virtual void CheckForErrors();
	virtual void PostEditChange();
	virtual void RenderEditorSelected(FLevelSceneNode* SceneNode,FRenderInterface* RI, FDynamicActor* FDA);
	virtual void FindBase();
	virtual UBOOL ShouldBeBased();
};

// Class	UAnimationSet is declared in "..\SwatGame\Classes\Animation\AnimationSet.uc"
class SWATGAME_API	UAnimationSet	: public UObject
{
public:
    FName AnimIdle;
    FName AnimTurnLeft;
    FName AnimTurnRight;
    FName AnimMoveForward;
    FName AnimMoveBackward;
    FName AnimMoveLeft;
    FName AnimMoveRight;
    FName AnimAimCenter;
    FName AnimAimLeft;
    FName AnimAimRight;
    FName AnimAimHigh;
    FName AnimAimLow;
    FName AnimLeanLeft;
    FName AnimLeanRight;
    FName AnimUnleanLeft;
    FName AnimUnleanRight;
    FName AnimCrouchedLeanLeft;
    FName AnimCrouchedLeanRight;
    FName AnimCrouchedUnleanLeft;
    FName AnimCrouchedUnleanRight;
    FName AnimLeanLeftAimCenter;
    FName AnimLeanLeftAimLeft;
    FName AnimLeanLeftAimRight;
    FName AnimLeanLeftAimHigh;
    FName AnimLeanLeftAimLow;
    FName AnimLeanRightAimCenter;
    FName AnimLeanRightAimLeft;
    FName AnimLeanRightAimRight;
    FName AnimLeanRightAimHigh;
    FName AnimLeanRightAimLow;
    FName AnimMouthOpen;
    FLOAT AnimSpeedForward;
    FLOAT AnimSpeedBackward;
    FLOAT AnimSpeedSidestep;
	   DECLARE_CLASS(UAnimationSet,UObject,0|CLASS_Config,SwatGame)
    void SetNamesToNull()
    {
        AnimIdle                = NAME_None;
        AnimTurnLeft            = NAME_None;
        AnimTurnRight           = NAME_None;
        AnimMoveForward         = NAME_None;
        AnimMoveBackward        = NAME_None;
        AnimMoveLeft            = NAME_None;
        AnimMoveRight           = NAME_None;
        AnimAimCenter           = NAME_None;
        AnimAimLeft             = NAME_None;
        AnimAimRight            = NAME_None;
        AnimAimHigh             = NAME_None;
        AnimAimLow              = NAME_None;
        AnimLeanLeft            = NAME_None;
        AnimLeanRight           = NAME_None;
        AnimUnleanLeft          = NAME_None;
        AnimUnleanRight         = NAME_None;
        AnimCrouchedLeanLeft    = NAME_None;
        AnimCrouchedLeanRight   = NAME_None;
        AnimCrouchedUnleanLeft  = NAME_None;
        AnimCrouchedUnleanRight = NAME_None;
        AnimLeanLeftAimCenter   = NAME_None;
        AnimLeanLeftAimLeft     = NAME_None;
        AnimLeanLeftAimRight    = NAME_None;
        AnimLeanLeftAimHigh     = NAME_None;
        AnimLeanLeftAimLow      = NAME_None;
        AnimLeanRightAimCenter  = NAME_None;
        AnimLeanRightAimLeft    = NAME_None;
        AnimLeanRightAimRight   = NAME_None;
        AnimLeanRightAimHigh    = NAME_None;
        AnimLeanRightAimLow     = NAME_None;
        AnimMouthOpen           = NAME_None;
    }
};

// Class	UArchetype is declared in "..\SwatGame\Classes\Archetypes\Archetype.uc"
class SWATGAME_API	UArchetype	: public UObject
{
public:
    FStringNoInit Description;
    class UClass* InstanceClass;
    FStringNoInit ValidationErrors;
    class AActor* Owner;
	   DECLARE_CLASS(UArchetype,UObject,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(UArchetype)
};

// Class	USwatCameraEffect is declared in "..\SwatGame\Classes\CameraEffects\SwatCameraEffect.uc"
class SWATGAME_API	USwatCameraEffect	: public UCameraEffect
{
public:
	   DECLARE_CLASS(USwatCameraEffect,UCameraEffect,0,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(USwatCameraEffect)
};

// Class	USwatCheatManager is declared in "..\SwatGame\Classes\SwatCheatManager.uc"
class SWATGAME_API	USwatCheatManager	: public UCheatManager
{
public:
    BITFIELD bUserHidAIs:1;
    BITFIELD bDebugGrenades:1;
	   DECLARE_FUNCTION(execToggleWatermark);
	   DECLARE_CLASS(USwatCheatManager,UCheatManager,0,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(USwatCheatManager)
};

// Class	UCommand is declared in "..\SwatGame\Classes\PlayerInteraction\Command.uc"
class SWATGAME_API	UCommand	: public UObject
{
public:
    INT Index;
    BYTE Command;
    BYTE Page;
    BYTE SubPage;
    INT CCIMenuPad;
    INT GCIMenuPad;
    FStringNoInit Text;
    FName EffectEvent;
    BITFIELD bStatic:1;
    BITFIELD IsCancel:1;
	   DECLARE_CLASS(UCommand,UObject,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(UCommand)
};

// Class	UConversation is declared in "..\SwatGame\Classes\Conversation\Conversation.uc"
class SWATGAME_API	UConversation	: public UObject
{
public:
    TArrayNoInit<FDialogLine> Line;
    INT CurrentLineIndex;
    FLOAT CurrentDelay;
    class AActor* CurrentSpeaker;
    BITFIELD bShouldCurrentSpeakerMoveMouth:1;
    class ASoundEffectsSubsystem* SoundEffectsSubsystem;
    class AConversationManager* Manager;
    FScriptDelegate __OnConversationEnded__Delegate;
	   DECLARE_FUNCTION(execGetSoundPropagationDistance);
	  void	delegateOnConversationEnded(class UConversation* Conversation, BITFIELD Completed)
	  {
        UConversation_eventOnConversationEnded_Parms Parms;
		   Parms.Conversation=Conversation;
		   Parms.Completed=Completed;
		   ProcessDelegate(SWATGAME_OnConversationEnded,&__OnConversationEnded__Delegate,&Parms);
	  }
	   DECLARE_CLASS(UConversation,UObject,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(UConversation)
};

// Class	UGUIGraphicCommandInterface is declared in "..\SwatGame\Classes\HUD\GUIGraphicCommandInterface.uc"
class SWATGAME_API	UGUIGraphicCommandInterface	: public UGUIMultiComponent
{
public:
    class UGUIGraphicCommandInterfaceMenu* MenuPages[7];
    class UCommand* CurrentCommand;
    class AGraphicCommandInterface* Logic;
    FLOAT OpenCloseTime;
    FLOAT MouseGestureTime;
    FLOAT MouseSensitivity;
    FLOAT LastMouseMoveTime;
    FLOAT GestureDistanceX;
    FLOAT GestureDistanceY;
    FLOAT ScrollTime;
    FLOAT MouseDistanceBetweenMenus;
    FLOAT MouseDistanceBetweenMenuPads;
    FStringNoInit RedTeamStyleName;
    FStringNoInit BlueTeamStyleName;
    FStringNoInit AsAnElementStyleName;
    FScreenLocation MainPageCenterOffset;
    BITFIELD bUseExitPad:1;
    FScriptDelegate __OnCapturedMouseMove__Delegate;
    FScriptDelegate __OnKeyEvent__Delegate;
	   DECLARE_FUNCTION(execSetCommand);
	   DECLARE_CLASS(UGUIGraphicCommandInterface,UGUIMultiComponent,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(UGUIGraphicCommandInterface)
};

// Class	UGUIGraphicCommandInterfaceMenuPad is declared in "..\SwatGame\Classes\HUD\GUIGraphicCommandInterfaceMenuPad.uc"
class SWATGAME_API	UGUIGraphicCommandInterfaceMenuPad	: public UGUIButton
{
public:
    class UCommand* Command;
    BYTE UnselectedState;
	   DECLARE_CLASS(UGUIGraphicCommandInterfaceMenuPad,UGUIButton,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(UGUIGraphicCommandInterfaceMenuPad)
};

// Class	UGUIGraphicCommandInterfaceMenu is declared in "..\SwatGame\Classes\HUD\GUIGraphicCommandInterfaceMenu.uc"
class SWATGAME_API	UGUIGraphicCommandInterfaceMenu	: public UObject
{
public:
    class UGUIGraphicCommandInterface* GCI;
    BYTE Page;
    BITFIELD IsAMainMenu:1;
    FScreenLocation Origin;
    FScreenLocation Root;
    class UGUIGraphicCommandInterfaceMenuPad* MenuPads[13];
	   DECLARE_CLASS(UGUIGraphicCommandInterfaceMenu,UObject,0,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(UGUIGraphicCommandInterfaceMenu)
};

// Class	IIAmUsedByToolkit is declared in "..\SwatGame\Classes\Equipment\IAmUsedByToolkit.uc"
class SWATGAME_API	IIAmUsedByToolkit	: public UObject
{
public:
	  FLOAT GetQualifyTimeForToolkit()
	  {
        IIAmUsedByToolkit_GetQualifyTimeForToolkit_Parms Parms;
		   Parms.ReturnValue=0;
        ProcessFunction(FindFunctionChecked(SWATGAME_GetQualifyTimeForToolkit),&Parms);
		   return Parms.ReturnValue;
	  }
	  void OnUsingByToolkitInterrupted(class APawn* User)
	  {
        IIAmUsedByToolkit_OnUsingByToolkitInterrupted_Parms Parms;
		   Parms.User=User;
        ProcessFunction(FindFunctionChecked(SWATGAME_OnUsingByToolkitInterrupted),&Parms);
	  }
	  void OnUsedByToolkit(class APawn* User)
	  {
        IIAmUsedByToolkit_OnUsedByToolkit_Parms Parms;
		   Parms.User=User;
        ProcessFunction(FindFunctionChecked(SWATGAME_OnUsedByToolkit),&Parms);
	  }
	  void OnUsingByToolkitBegan(class APawn* User)
	  {
        IIAmUsedByToolkit_OnUsingByToolkitBegan_Parms Parms;
		   Parms.User=User;
        ProcessFunction(FindFunctionChecked(SWATGAME_OnUsingByToolkitBegan),&Parms);
	  }
	  BITFIELD CanBeUsedByToolkitNow()
	  {
        IIAmUsedByToolkit_CanBeUsedByToolkitNow_Parms Parms;
		   Parms.ReturnValue=0;
        ProcessFunction(FindFunctionChecked(SWATGAME_CanBeUsedByToolkitNow),&Parms);
		   return Parms.ReturnValue;
	  }
	   DECLARE_CLASS(IIAmUsedByToolkit,UObject,0|CLASS_Interface,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(IIAmUsedByToolkit)
};

// Class	IICanBeDisabled is declared in "..\SwatGame\Classes\ICanBeDisabled.uc"
class SWATGAME_API	IICanBeDisabled	: public UObject
{
public:
	  BITFIELD isActive()
	  {
        IICanBeDisabled_isActive_Parms Parms;
		   Parms.ReturnValue=0;
        ProcessFunction(FindFunctionChecked(SWATGAME_isActive),&Parms);
		   return Parms.ReturnValue;
	  }
	   DECLARE_CLASS(IICanBeDisabled,UObject,0|CLASS_Interface,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(IICanBeDisabled)
};

// Class	UPawnDoorKnowledge is declared in "..\SwatGame\Classes\Doors\PawnDoorKnowledge.uc"
class SWATGAME_API	UPawnDoorKnowledge	: public UObject
{
public:
    BITFIELD bBelievesDoorLocked:1;
    BITFIELD bBelievesDoorWedged:1;
    BITFIELD bBeliefKnown:1;
	   DECLARE_FUNCTION(execDoesBelieveDoorWedged);
	   DECLARE_FUNCTION(execDoesBelieveDoorLocked);
	   DECLARE_CLASS(UPawnDoorKnowledge,UObject,0,SwatGame)
	UBOOL DoesBelieveDoorLocked() { return bBelievesDoorLocked; }
	UBOOL DoesBelieveDoorWedged() { return bBelievesDoorWedged; }
};

// Class	UPlayerInterfaceContext is declared in "..\SwatGame\Classes\PlayerInteraction\PlayerInterfaceContext.uc"
class SWATGAME_API	UPlayerInterfaceContext	: public UObject
{
public:
    FLOAT Range;
    FName Type;
    TArrayNoInit<FName> Except;
    TArrayNoInit<FName> ExceptActiveItem;
    BITFIELD HasSpecialConditions:1;
    FName HasA;
    FName DoesntHaveA;
    BITFIELD CaresAboutTransparent:1;
    BITFIELD IsTransparent:1;
    FName ActiveItem;
    BITFIELD BlockTrace:1;
    BITFIELD BlockTraceIfOpaque:1;
    BITFIELD AddFocus:1;
    BITFIELD BreakIfMatch:1;
	   DECLARE_CLASS(UPlayerInterfaceContext,UObject,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(UPlayerInterfaceContext)
};

// Class	UCommandInterfaceContext is declared in "..\SwatGame\Classes\PlayerInteraction\CommandInterfaceContext.uc"
class SWATGAME_API	UCommandInterfaceContext	: public UPlayerInterfaceContext
{
public:
    BITFIELD CaresAboutIsActive:1;
    BITFIELD isActive:1;
    BYTE DefaultCommand;
    INT DefaultCommandPriority;
    BITFIELD CaresAboutCanBeArrestedNow:1;
    BITFIELD CanBeArrestedNow:1;
    BITFIELD CaresAboutCanBeUsedNow:1;
    BITFIELD CanBeUsedNow:1;
    BITFIELD CaresAboutCanBeReportedNow:1;
    BITFIELD CanBeReportedNow:1;
    TArrayNoInit<BYTE> Command;
	   DECLARE_CLASS(UCommandInterfaceContext,UPlayerInterfaceContext,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(UCommandInterfaceContext)
};

// Class	UFireInterfaceContext is declared in "..\SwatGame\Classes\PlayerInteraction\FireInterfaceContext.uc"
class SWATGAME_API	UFireInterfaceContext	: public UPlayerInterfaceContext
{
public:
    BITFIELD CaresAboutCanBeArrestedNow:1;
    BITFIELD CanBeArrestedNow:1;
    BITFIELD CaresAboutCanBeUsedByToolkitNow:1;
    BITFIELD CanBeUsedByToolkitNow:1;
    BYTE EquipmentSlotForQualify;
    class UMaterial* ReticleImage;
    FStringNoInit FireFeedbackText;
	   DECLARE_CLASS(UFireInterfaceContext,UPlayerInterfaceContext,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(UFireInterfaceContext)
};

// Class	ULowReadyInterfaceContext is declared in "..\SwatGame\Classes\PlayerInteraction\LowReadyInterfaceContext.uc"
class SWATGAME_API	ULowReadyInterfaceContext	: public UPlayerInterfaceContext
{
public:
    BITFIELD CaresAboutCanBeArrestedNow:1;
    BITFIELD CanBeArrestedNow:1;
    BITFIELD CaresAboutIsCompliant:1;
    BITFIELD IsCompliant:1;
    BITFIELD CaresAboutIsArrested:1;
    BITFIELD IsArrested:1;
    BITFIELD CaresAboutFlashlightOn:1;
    BITFIELD FlashlightIsOn:1;
    BITFIELD ShouldLowReady:1;
    FName Reason;
	   DECLARE_CLASS(ULowReadyInterfaceContext,UPlayerInterfaceContext,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(ULowReadyInterfaceContext)
};

// Class	UPlayerTagInterfaceContext is declared in "..\SwatGame\Classes\PlayerInteraction\PlayerTagInterfaceContext.uc"
class SWATGAME_API	UPlayerTagInterfaceContext	: public UPlayerInterfaceContext
{
public:
	   DECLARE_CLASS(UPlayerTagInterfaceContext,UPlayerInterfaceContext,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(UPlayerTagInterfaceContext)
};

// Class	UUseInterfaceContext is declared in "..\SwatGame\Classes\PlayerInteraction\UseInterfaceContext.uc"
class SWATGAME_API	UUseInterfaceContext	: public UPlayerInterfaceContext
{
public:
    BITFIELD CaresAboutCanBeUsedNow:1;
    BITFIELD CanBeUsedNow:1;
    BITFIELD CaresAboutRestrained:1;
    BITFIELD IsRestrained:1;
    BITFIELD CaresAboutIncapacitated:1;
    BITFIELD IsIncapacitated:1;
    BITFIELD CaresAboutCanBeArrestedNow:1;
    BITFIELD CanBeArrestedNow:1;
    BITFIELD CaresAboutDead:1;
    BITFIELD IsDead:1;
    BITFIELD IsGlass:1;
    BITFIELD CaresAboutLookingThruGlass:1;
    BITFIELD IsLookingThruGlass:1;
    FStringNoInit UseFeedbackText;
    FStringNoInit OtherFeedbackText;
	   DECLARE_CLASS(UUseInterfaceContext,UPlayerInterfaceContext,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(UUseInterfaceContext)
};

// Class	UPlayerInterfaceDoorRelatedContext is declared in "..\SwatGame\Classes\PlayerInteraction\PlayerInterfaceDoorRelatedContext.uc"
class SWATGAME_API	UPlayerInterfaceDoorRelatedContext	: public UObject
{
public:
    FLOAT Range;
    BYTE DoorPart;
    FName ActiveItem;
    TArrayNoInit<FName> ExceptActiveItem;
    BYTE SkeletalRegion;
    BITFIELD CaresAboutOpen:1;
    BITFIELD IsOpen:1;
    BITFIELD CaresAboutLocked:1;
    BITFIELD IsLocked:1;
    BITFIELD CaresAboutPlayerBelief:1;
    BITFIELD PlayerBelievesLocked:1;
    BITFIELD CaresAboutWedged:1;
    BITFIELD IsWedged:1;
    BITFIELD CaresAboutBroken:1;
    BITFIELD IsBroken:1;
    BITFIELD CaresAboutMissionExit:1;
    BITFIELD IsMissionExit:1;
    BITFIELD CaresAboutTransparent:1;
    BITFIELD IsTransparent:1;
    FName HasA;
    FName DoesntHaveA;
    BITFIELD AddFocus:1;
    BITFIELD BlockTrace:1;
    BITFIELD BlockTraceIfOpaque:1;
    BITFIELD BreakIfMatch:1;
	   DECLARE_CLASS(UPlayerInterfaceDoorRelatedContext,UObject,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(UPlayerInterfaceDoorRelatedContext)
};

// Class	UCommandInterfaceDoorRelatedContext is declared in "..\SwatGame\Classes\PlayerInteraction\CommandInterfaceDoorRelatedContext.uc"
class SWATGAME_API	UCommandInterfaceDoorRelatedContext	: public UPlayerInterfaceDoorRelatedContext
{
public:
    BITFIELD CaresAboutPlayerOnExternalSide:1;
    BITFIELD PlayerIsOnExternalSide:1;
    BITFIELD CaresAboutCanIssueCommandsFromMySide:1;
    BITFIELD CanIssueCommandsFromMySide:1;
    BYTE DefaultCommand;
    INT DefaultCommandPriority;
    TArrayNoInit<BYTE> Command;
	   DECLARE_CLASS(UCommandInterfaceDoorRelatedContext,UPlayerInterfaceDoorRelatedContext,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(UCommandInterfaceDoorRelatedContext)
};

// Class	UFireInterfaceDoorRelatedContext is declared in "..\SwatGame\Classes\PlayerInteraction\FireInterfaceDoorRelatedContext.uc"
class SWATGAME_API	UFireInterfaceDoorRelatedContext	: public UPlayerInterfaceDoorRelatedContext
{
public:
    BITFIELD CaresAboutC2ChargeOnPlayersSide:1;
    BITFIELD IsC2ChargeOnPlayersSide:1;
    BYTE EquipmentSlotForQualify;
    class UMaterial* ReticleImage;
    FStringNoInit FireFeedbackText;
    FName SideEffect;
	   DECLARE_CLASS(UFireInterfaceDoorRelatedContext,UPlayerInterfaceDoorRelatedContext,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(UFireInterfaceDoorRelatedContext)
};

// Class	ULowReadyInterfaceDoorRelatedContext is declared in "..\SwatGame\Classes\PlayerInteraction\LowReadyInterfaceDoorRelatedContext.uc"
class SWATGAME_API	ULowReadyInterfaceDoorRelatedContext	: public UPlayerInterfaceDoorRelatedContext
{
public:
    BITFIELD ShouldLowReady:1;
    FName Reason;
	   DECLARE_CLASS(ULowReadyInterfaceDoorRelatedContext,UPlayerInterfaceDoorRelatedContext,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(ULowReadyInterfaceDoorRelatedContext)
};

// Class	UPlayerTagInterfaceDoorRelatedContext is declared in "..\SwatGame\Classes\PlayerInteraction\PlayerTagInterfaceDoorRelatedContext.uc"
class SWATGAME_API	UPlayerTagInterfaceDoorRelatedContext	: public UPlayerInterfaceDoorRelatedContext
{
public:
	   DECLARE_CLASS(UPlayerTagInterfaceDoorRelatedContext,UPlayerInterfaceDoorRelatedContext,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(UPlayerTagInterfaceDoorRelatedContext)
};

// Class	UUseInterfaceDoorRelatedContext is declared in "..\SwatGame\Classes\PlayerInteraction\UseInterfaceDoorRelatedContext.uc"
class SWATGAME_API	UUseInterfaceDoorRelatedContext	: public UPlayerInterfaceDoorRelatedContext
{
public:
    FStringNoInit UseFeedbackText;
    FStringNoInit OtherFeedbackText;
    BITFIELD CaresAboutLookingThruGlass:1;
    BITFIELD IsLookingThruGlass:1;
	   DECLARE_CLASS(UUseInterfaceDoorRelatedContext,UPlayerInterfaceDoorRelatedContext,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(UUseInterfaceDoorRelatedContext)
};

// Class	USwatRepo is declared in "..\SwatGame\Classes\SwatRepo.uc"
class SWATGAME_API	USwatRepo	: public URepo
{
public:
    class USwatGUIConfig* GuiConfig;
    class ASwatPlayerController* PlayerController;
    class UAnimationSetManager* AnimationSetManager;
    INT SwatPlayerIDCounter;
    TArrayNoInit<class USwatRepoPlayerItem*> PlayerItems;
    BITFIELD bTravellingToNewRound:1;
    BITFIELD bFirstRound:1;
    BITFIELD NetRoundInProgress:1;
    FLOAT CumulativeDelta;
    FLOAT LastServerTime;
    BITFIELD bDelayedFinish:1;
    FLOAT CriticalMomentCountdown;
    BITFIELD bFailedServerTransitionEnabled:1;
    FLOAT PRECACHING_FUDGE;
    INT RoundsWon[2];
    class ASwatGameReplicationInfo* CachedSGRI;
    BITFIELD bInitAsNetPlayer:1;
    class UMissionObjectives* MissionObjectives;
    class UProcedures* Procedures;
    class AConversationManager* ConversationManager;
    class ATrainingTextManager* TrainingTextManager;
    BITFIELD bShouldPerformQuickRoundReset:1;
	  void	eventNetworkHostLoading()
	  {
		   ProcessEvent(FindFunctionChecked(SWATGAME_NetworkHostLoading),NULL);
	  }
	  void	eventNetworkClientLoading()
	  {
		   ProcessEvent(FindFunctionChecked(SWATGAME_NetworkClientLoading),NULL);
	  }
	  void	eventPostPlayerLogin(class ASwatPlayerController* thePC, BYTE CurrentGameMode)
	  {
        USwatRepo_eventPostPlayerLogin_Parms Parms;
		   Parms.thePC=thePC;
		   Parms.CurrentGameMode=CurrentGameMode;
        ProcessEvent(FindFunctionChecked(SWATGAME_PostPlayerLogin),&Parms);
	  }
	   DECLARE_CLASS(USwatRepo,URepo,0|CLASS_Transient|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(USwatRepo)
};

// Class	USwatGameEngine is declared in "..\SwatGame\Classes\SwatGameEngine.uc"
class SWATGAME_API	USwatGameEngine	: public UGameEngine
{
public:
	   DECLARE_FUNCTION(execOnOtherActorDestroyed);
	   DECLARE_CLASS(USwatGameEngine,UGameEngine,0|CLASS_Transient|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(USwatGameEngine)
};

// Class	USwatGUIConfig is declared in "..\SwatGame\Classes\SwatGUIConfig.uc"
class SWATGAME_API	USwatGUIConfig	: public UObject
{
public:
    FStringNoInit DifficultyString[4];
    INT DifficultyScoreRequirement[4];
    BYTE CurrentDifficulty;
    TArrayNoInit<FName> NotUsed1;
    TArrayNoInit<FString> NotUsed2;
    class USwatMission* CurrentMission;
    TArrayNoInit<FName> NotUsed3;
    TArrayNoInit<FString> NotUsed4;
    TArrayNoInit<class UClass*> NotUsed5;
    FName LastMissionPlayedName;
    FStringNoInit LastMissionPlayedFriendlyName;
    class UCustomScenario* LastMissionPlayedCustomScenario;
    FName CurrentMissionName;
    FStringNoInit CurrentMissionFriendlyName;
    class UCustomScenario* CurrentMissionCustomScenario;
    TArrayNoInit<FName> MissionResultNames;
    TArrayNoInit<class UMissionResults*> MissionResults;
    class UCustomScenarioPack* CurrentCustomScenarioPack;
    FStringNoInit PakName;
    FStringNoInit PakFriendlyName;
    FStringNoInit PakExtension;
    FStringNoInit ScenarioName;
    BYTE DesiredSPEntryPoint;
    BITFIELD bEverRanTraining:1;
    TArrayNoInit<class USwatEquipmentSpec*> AvailableEquipmentPockets;
    TArrayNoInit<FString> CustomEquipmentLoadouts;
    TArrayNoInit<FString> CustomEquipmentLoadoutFriendlyNames;
    TArrayNoInit<FString> CustomEquipmentLoadoutDefaultFriendlyNames;
    TArrayNoInit<BITFIELD> LoadoutIsUndeletable;
    TArrayNoInit<FLOAT> ExtraFloatOptions;
    TArrayNoInit<FString> NotUsed7;
    TArrayNoInit<BYTE> NotUsed8;
    TArrayNoInit<FString> AudioVirtualizationChoices;
    TArrayNoInit<FString> SoundQualityChoices;
    TArrayNoInit<FString> ScreenResolutionChoices;
    TArrayNoInit<FString> TextureDetailChoices;
    TArrayNoInit<FString> OtherDetailChoices;
    TArrayNoInit<FString> RenderDetailChoices;
    TArrayNoInit<FString> PixelShaderChoices;
    TArrayNoInit<FString> RealtimeMirrorChoices;
    TArrayNoInit<FString> VoiceTypeChoices;
    BYTE PreferredVoiceType;
    BYTE CachedRandomVoice;
    TArrayNoInit<FString> ExtraStrOptions;
    TArrayNoInit<INT> ExtraIntOptions;
    INT NetSpeedSelection;
    FLOAT MPPostMissionTime;
    FLOAT MPPollingDelay;
    BITFIELD FirstTimeThrough:1;
    TArrayNoInit<FString> AvailableMPMaps;
    FStringNoInit SwatMapFileExtension;
    FStringNoInit SwatMPMapNamePrefix;
    FStringNoInit TDMDescription;
    FStringNoInit VIPDescription;
    FStringNoInit BombDescription;
    FStringNoInit COOPDescription;
    FStringNoInit COOPQMMDescription;
    FStringNoInit SmashAndGrabDescription;
    FStringNoInit TDMFriendlyName;
    FStringNoInit VIPFriendlyName;
    FStringNoInit BombFriendlyName;
    FStringNoInit COOPFriendlyName;
    FStringNoInit COOPQMMFriendlyName;
    FStringNoInit SmashAndGrabFriendlyName;
    FStringNoInit MPSuspectsWinMessage;
    FStringNoInit MPSWATWinMessage;
    FStringNoInit MPTieMessage;
    FStringNoInit DefaultMPName;
    FStringNoInit MPName;
    BITFIELD bShowSubtitles:1;
    BITFIELD bShowHelp:1;
    BITFIELD bAlwaysRun:1;
    BITFIELD bShowCustomSkins:1;
    INT MPNameLength;
    FStringNoInit MPNameAllowableCharSet;
    BYTE CommandInterfaceStyle;
    BYTE CurrentCommandInterfaceStyle;
    INT MessageDisplayTime;
    INT GCIButtonMode;
    BITFIELD bUseExitMenu:1;
    FStringNoInit AdminPassword;
    TArrayNoInit<class UMapRotation*> MapList;
    FServerFilters theServerFilters;
    BITFIELD bViewingGameSpy:1;
    BYTE SwatGameState;
    BYTE SwatGameRole;
    FLOAT CriticalMomentDelay;
	   DECLARE_CLASS(USwatGUIConfig,UObject,0|CLASS_Config,SwatGame)
	   NO_DEFAULT_CONSTRUCTOR(USwatGUIConfig)
};

#endif

AUTOGENERATE_FUNCTION(ACommandInterface,-1,execTeamCanExecuteCommand);
AUTOGENERATE_FUNCTION(ACommandInterface,-1,execGetColorizedCommandText);
AUTOGENERATE_FUNCTION(UConversation,-1,execGetSoundPropagationDistance);
AUTOGENERATE_FUNCTION(AFireInterface,-1,execRejectFocus);
AUTOGENERATE_FUNCTION(UGUIGraphicCommandInterface,-1,execSetCommand);
AUTOGENERATE_FUNCTION(AGameModeMPBase,-1,execCalculateClusterDistanceFromPawn);
AUTOGENERATE_FUNCTION(ANetPlayer,-1,execAllVarsHaveReplicated);
AUTOGENERATE_FUNCTION(UPawnDoorKnowledge,-1,execDoesBelieveDoorWedged);
AUTOGENERATE_FUNCTION(UPawnDoorKnowledge,-1,execDoesBelieveDoorLocked);
AUTOGENERATE_FUNCTION(APlayerFocusInterface,-1,execRejectFocus);
AUTOGENERATE_FUNCTION(APlayerTagInterface,-1,execRejectFocus);
AUTOGENERATE_FUNCTION(ASwatAI,-1,execCanMoveFreely);
AUTOGENERATE_FUNCTION(ASwatAI,-1,execIsOtherActorAThreat);
AUTOGENERATE_FUNCTION(ASwatAI,-1,execGetCommanderAction);
AUTOGENERATE_FUNCTION(ASwatAI,-1,execSetWeaponTarget);
AUTOGENERATE_FUNCTION(ASwatAI,-1,execCanHitTargetAt);
AUTOGENERATE_FUNCTION(ASwatAI,-1,execIsRelevantToPlayerOrOfficers);
AUTOGENERATE_FUNCTION(ASwatAI,-1,execGetViewPoint);
AUTOGENERATE_FUNCTION(ASwatAI,-1,execGetViewDirection);
AUTOGENERATE_FUNCTION(ASwatAI,-1,execSetupVisionBone);
AUTOGENERATE_FUNCTION(ASwatAICharacter,-1,execForceUpdateAwareness);
AUTOGENERATE_FUNCTION(ASwatAICharacter,-1,execIsStunned);
AUTOGENERATE_FUNCTION(ASwatAICharacter,-1,execIsStunnedByC2);
AUTOGENERATE_FUNCTION(ASwatAICharacter,-1,execIsTased);
AUTOGENERATE_FUNCTION(ASwatAICharacter,-1,execIsStung);
AUTOGENERATE_FUNCTION(ASwatAICharacter,-1,execIsPepperSprayed);
AUTOGENERATE_FUNCTION(ASwatAICharacter,-1,execIsGassed);
AUTOGENERATE_FUNCTION(ASwatAICharacter,-1,execIsFlashbanged);
AUTOGENERATE_FUNCTION(USwatCheatManager,-1,execToggleWatermark);
AUTOGENERATE_FUNCTION(ASwatDoor,-1,execGetSkeletalRegionCenter);
AUTOGENERATE_FUNCTION(ASwatDoor,-1,execGetRightRoomName);
AUTOGENERATE_FUNCTION(ASwatDoor,-1,execGetLeftRoomName);
AUTOGENERATE_FUNCTION(ASwatDoor,-1,execPointIsToMyLeft);
AUTOGENERATE_FUNCTION(ASwatEnemy,-1,execGetAdditionalBaseAimError);
AUTOGENERATE_FUNCTION(ASwatEnemy,-1,execActorIsInSameOrAdjacentZoneAsMe);
AUTOGENERATE_FUNCTION(USwatGameEngine,-1,execOnOtherActorDestroyed);
AUTOGENERATE_FUNCTION(ASwatGamePlayerController,-1,execIsNetRelevant);
AUTOGENERATE_FUNCTION(ASwatGamePlayerController,-1,execFlagForPrecache);
AUTOGENERATE_FUNCTION(ASwatGamePlayerController,-1,execGetLookAroundSpeed);
AUTOGENERATE_FUNCTION(ASwatHUD,-1,execDrawDebugCover);
AUTOGENERATE_FUNCTION(ASwatOfficer,-1,execGetOfficerCommanderAction);
AUTOGENERATE_FUNCTION(ASwatPawn,-1,execIsArrested);
AUTOGENERATE_FUNCTION(ASwatPawn,-1,execDoesBelieveDoorWedged);
AUTOGENERATE_FUNCTION(ASwatPawn,-1,execDoesBelieveDoorLocked);
AUTOGENERATE_FUNCTION(ASwatPawn,-1,execGetDoorKnowledge);
AUTOGENERATE_FUNCTION(ASwatPawn,-1,execSetRenderBoundingBoxExpansionSize);
AUTOGENERATE_FUNCTION(ASwatPawn,-1,execAnimGetAimOrigin);
AUTOGENERATE_FUNCTION(ASwatPawn,-1,execAnimSnapRotationToBase);
AUTOGENERATE_FUNCTION(ASwatPawn,-1,execAnimSnapBaseToAim);
AUTOGENERATE_FUNCTION(ASwatPawn,-1,execAnimAreAimingChannelsMuted);
AUTOGENERATE_FUNCTION(ASwatPawn,-1,execAnimAreChannelsAtZeroAlpha);
AUTOGENERATE_FUNCTION(ASwatPawn,-1,execAnimSetIdle);
AUTOGENERATE_FUNCTION(ASwatPawn,-1,execAnimStopQuickHit);
AUTOGENERATE_FUNCTION(ASwatPawn,-1,execAnimStopEquipment);
AUTOGENERATE_FUNCTION(ASwatPawn,-1,execAnimStopSpecial);
AUTOGENERATE_FUNCTION(ASwatPawn,-1,execAnimGetQuickHitChannel);
AUTOGENERATE_FUNCTION(ASwatPawn,-1,execAnimGetEquipmentChannel);
AUTOGENERATE_FUNCTION(ASwatPawn,-1,execAnimGetSpecialChannel);
AUTOGENERATE_FUNCTION(ASwatPawn,-1,execAnimCanAimAtDesiredRotation);
AUTOGENERATE_FUNCTION(ASwatPawn,-1,execAnimCanAimAtDesiredActor);
AUTOGENERATE_FUNCTION(ASwatPawn,-1,execAnimCanAimAtDesiredPoint);
AUTOGENERATE_FUNCTION(ASwatPawn,-1,execAnimIsAimedAtDesired);
AUTOGENERATE_FUNCTION(ASwatPawn,-1,execAnimGetAimRotation);
AUTOGENERATE_FUNCTION(ASwatPawn,-1,execSetThirdPersonLeanAnims);
AUTOGENERATE_FUNCTION(ASwatPawn,-1,execAnimStopAimChannels);
AUTOGENERATE_FUNCTION(ASwatPawn,-1,execIsLowerBodyInjured);
AUTOGENERATE_FUNCTION(ASwatPawn,-1,execAnimSwapInSet_Native);
AUTOGENERATE_FUNCTION(ASwatPawn,-1,execInitNativeAnimationSystemForPawn);
AUTOGENERATE_FUNCTION(ASwatPlayer,-1,execGetLeanRotationOffset);
AUTOGENERATE_FUNCTION(ASwatPlayer,-1,execGetLeanPositionOffset);
AUTOGENERATE_FUNCTION(ASwatPlayer,-1,execGetViewPoint);
AUTOGENERATE_FUNCTION(ASwatPlayer,-1,execUnTriggerAllNonLethalEffectEvents);
AUTOGENERATE_FUNCTION(ASwatPlayer,-1,execUpdateNonLethalEffectEvents);
AUTOGENERATE_FUNCTION(ASwatPlayerController,-1,execShouldAutoJoinOnStartUp);
AUTOGENERATE_FUNCTION(ASwatRagdollPawn,-1,execStopTwitchingLimbs);
AUTOGENERATE_FUNCTION(ASwatRagdollPawn,-1,execStartTwitchingLimbs);

#ifndef NAMES_ONLY
#undef AUTOGENERATE_NAME
#undef AUTOGENERATE_FUNCTION
#endif

#if SUPPORTS_PRAGMA_PACK
#pragma pack	(pop)
#endif

#ifdef VERIFY_CLASS_SIZES
VERIFY_CLASS_SIZE_NODIE(UAnimationSet)
VERIFY_CLASS_SIZE_NODIE(UArchetype)
VERIFY_CLASS_SIZE_NODIE(UCommand)
VERIFY_CLASS_SIZE_NODIE(ACommandArrow)
VERIFY_CLASS_SIZE_NODIE(ACommandInterface)
VERIFY_CLASS_SIZE_NODIE(UCommandInterfaceContext)
VERIFY_CLASS_SIZE_NODIE(UCommandInterfaceDoorRelatedContext)
VERIFY_CLASS_SIZE_NODIE(UConversation)
VERIFY_CLASS_SIZE_NODIE(AConversationManager)
VERIFY_CLASS_SIZE_NODIE(ADeployedWedgeBase)
VERIFY_CLASS_SIZE_NODIE(ADoorAttachment)
VERIFY_CLASS_SIZE_NODIE(ADoorBufferVolume)
VERIFY_CLASS_SIZE_NODIE(ADoorModel)
VERIFY_CLASS_SIZE_NODIE(ADoorWay)
VERIFY_CLASS_SIZE_NODIE(ADoubleDoor)
VERIFY_CLASS_SIZE_NODIE(ADynamicLight)
VERIFY_CLASS_SIZE_NODIE(AEnemySpawner)
VERIFY_CLASS_SIZE_NODIE(AFireInterface)
VERIFY_CLASS_SIZE_NODIE(UFireInterfaceContext)
VERIFY_CLASS_SIZE_NODIE(UFireInterfaceDoorRelatedContext)
VERIFY_CLASS_SIZE_NODIE(UGUIGraphicCommandInterface)
VERIFY_CLASS_SIZE_NODIE(UGUIGraphicCommandInterfaceMenu)
VERIFY_CLASS_SIZE_NODIE(UGUIGraphicCommandInterfaceMenuPad)
VERIFY_CLASS_SIZE_NODIE(AGameMode)
VERIFY_CLASS_SIZE_NODIE(AGameModeMPBase)
VERIFY_CLASS_SIZE_NODIE(AGraphicCommandInterface)
VERIFY_CLASS_SIZE_NODIE(AHostageSpawner)
VERIFY_CLASS_SIZE_NODIE(IIAmUsedByToolkit)
VERIFY_CLASS_SIZE_NODIE(IICanBeDisabled)
VERIFY_CLASS_SIZE_NODIE(ALoadOut)
VERIFY_CLASS_SIZE_NODIE(ALoadOutValidationBase)
VERIFY_CLASS_SIZE_NODIE(ALowReadyInterface)
VERIFY_CLASS_SIZE_NODIE(ULowReadyInterfaceContext)
VERIFY_CLASS_SIZE_NODIE(ULowReadyInterfaceDoorRelatedContext)
VERIFY_CLASS_SIZE_NODIE(AMirrorPoint)
VERIFY_CLASS_SIZE_NODIE(ANetPlayer)
VERIFY_CLASS_SIZE_NODIE(AOfficerLoadOut)
VERIFY_CLASS_SIZE_NODIE(UPawnDoorKnowledge)
VERIFY_CLASS_SIZE_NODIE(APlayerFocusInterface)
VERIFY_CLASS_SIZE_NODIE(UPlayerInterfaceContext)
VERIFY_CLASS_SIZE_NODIE(UPlayerInterfaceDoorRelatedContext)
VERIFY_CLASS_SIZE_NODIE(APlayerTagInterface)
VERIFY_CLASS_SIZE_NODIE(UPlayerTagInterfaceContext)
VERIFY_CLASS_SIZE_NODIE(UPlayerTagInterfaceDoorRelatedContext)
VERIFY_CLASS_SIZE_NODIE(ASimpleEquipment)
VERIFY_CLASS_SIZE_NODIE(ASingleDoor)
VERIFY_CLASS_SIZE_NODIE(ASpawner)
VERIFY_CLASS_SIZE_NODIE(ASwatAI)
VERIFY_CLASS_SIZE_NODIE(ASwatAICharacter)
VERIFY_CLASS_SIZE_NODIE(ASwatAIController)
VERIFY_CLASS_SIZE_NODIE(USwatCameraEffect)
VERIFY_CLASS_SIZE_NODIE(USwatCheatManager)
VERIFY_CLASS_SIZE_NODIE(ASwatDoor)
VERIFY_CLASS_SIZE_NODIE(ASwatEnemy)
VERIFY_CLASS_SIZE_NODIE(USwatGUIConfig)
VERIFY_CLASS_SIZE_NODIE(USwatGameEngine)
VERIFY_CLASS_SIZE_NODIE(ASwatGameInfo)
VERIFY_CLASS_SIZE_NODIE(ASwatGamePlayerController)
VERIFY_CLASS_SIZE_NODIE(ASwatHUD)
VERIFY_CLASS_SIZE_NODIE(ASwatHostage)
VERIFY_CLASS_SIZE_NODIE(ASwatMPStartCluster)
VERIFY_CLASS_SIZE_NODIE(ASwatMPStartPoint)
VERIFY_CLASS_SIZE_NODIE(ASwatOfficer)
VERIFY_CLASS_SIZE_NODIE(ASwatOfficerStart)
VERIFY_CLASS_SIZE_NODIE(ASwatPawn)
VERIFY_CLASS_SIZE_NODIE(ASwatPlayer)
VERIFY_CLASS_SIZE_NODIE(ASwatPlayerController)
VERIFY_CLASS_SIZE_NODIE(ASwatPlayerStart)
VERIFY_CLASS_SIZE_NODIE(ASwatRagdollPawn)
VERIFY_CLASS_SIZE_NODIE(USwatRepo)
VERIFY_CLASS_SIZE_NODIE(ASwatStartPointBase)
VERIFY_CLASS_SIZE_NODIE(ASwatTrainer)
VERIFY_CLASS_SIZE_NODIE(AUseInterface)
VERIFY_CLASS_SIZE_NODIE(UUseInterfaceContext)
VERIFY_CLASS_SIZE_NODIE(UUseInterfaceDoorRelatedContext)
VERIFY_CLASS_SIZE_NODIE(AVisionBlockingVolume)
#endif // VERIFY_CLASS_SIZES
